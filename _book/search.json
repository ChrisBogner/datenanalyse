[{"path":"index.html","id":"vorwort","chapter":"Vorwort","heading":"Vorwort","text":"‚Äúhoney, ‚Äôre gonna style‚Äù","code":""},{"path":"index.html","id":"organisatorisches","chapter":"Vorwort","heading":"Organisatorisches","text":"\nDie Coronaviruspandemie ver√§ndert unser Leben und unser Lernen. Die UzK bittet Lehrende, das SoSe 2021 als Hybridsemester zu gestalten. Wir werden unseren Kurs komplett online durchf√ºhren. Bitte seien Sie nachsichtig, wenn nicht alles klappt, wie Pr√§senzveranstaltungen. Wir m√ºssen aktuell alle sehr viel dazu lernen Sachen digitale Lehre. Sie k√∂nnen sicher sein, dass das Geographische Institut bem√ºht ist, die Lehre effizient wie m√∂glich weiter laufen zu lassen, damit Sie Ihrem Studium fortfahren k√∂nnen.\ndieser Veranstaltung werden wir folgende Werkzeuge verwenden:ILIAS: die Online-Lernplattform der UzK. Entweder sind Sie bereits automatisch dem Kurs registriert oder werden von mir per Hand angemeldet.Campuswire: die Live-Chatplattform dient der allgemeinen Kommunikation und der Selbstorganisation des Lernens. Verwenden Sie diese, um Fragen mit Ihren Kommilitonen und mir zu diskutieren. Sie sollten eine Einladungsmail zu Campuswire erhalten haben.Zoom: die Videokonferenz-Software werden wir f√ºr live Einf√ºhrungen nutzen. Die Anmeldemodalit√§ten sind auf den Kursseiten ILIAS erkl√§rt.RStudio Server Pro: der Server bietet die M√∂glichkeit, online R und RStudio zu arbeiten.","code":""},{"path":"index.html","id":"verwendete-literatur","chapter":"Vorwort","heading":"Verwendete Literatur","text":"Wir werden diesem Kurs haupts√§chlich das freie, englischsprachige Buch ModernDive: Statistical Inference via Data Science benutzen (Ismay Kim 2021). Bitte lassen Sie sich nicht davon abschrecken, dass das Buch englischsprachig ist. Es ist sehr gut verst√§ndlich und bietet einen modernen Zugang zur Datenanalyse. Als ein weiteres Buch werden wir Sauer (2019) nutzen.Ab und werde ich Ihnen auch andere Literatur empfehlen. F√ºr Ihren Abschlussbericht werden Sie auch selbst√§ndig weitere Literatur recherchieren.","code":""},{"path":"index.html","id":"sinn-und-unsinn-dieses-skripts","chapter":"Vorwort","heading":"Sinn und Unsinn dieses Skripts","text":"Dieses Skript ist ein lebendiges Begleitdokument des Kurses. Es wird laufend angepasst und aktualisiert.Ich nutze verschiedene Farbk√§sten, um wichtige Stellen hervorzuheben:\nInfoblock\n\nAchtung, wichtig!\n\nBeispielblock\n\nLernziele\n","code":""},{"path":"index.html","id":"inspiration-quellen-und-danksagung","chapter":"Vorwort","heading":"Inspiration, Quellen und Danksagung","text":"Dieses Skript baut stark auf folgenden freien Quellen auf:r4ds: Wickham Grolemund (2021)ModernDive: Ismay Kim (2021)Den Autoren dieser B√ºcher gilt ein gro√üer Dank f√ºr Ihren Beitrag zur -Community !","code":""},{"path":"einfuehrung.html","id":"einfuehrung","chapter":"Kapitel 1 Der Kurs","heading":"Kapitel 1 Der Kurs","text":"","code":""},{"path":"einfuehrung.html","id":"zuordnung-zum-modul-und-leistungsnachweis","chapter":"Kapitel 1 Der Kurs","heading":"1.1 Zuordnung zum Modul und Leistungsnachweis","text":"Dieser Kurs geh√∂rt zum Modul Fachmethodik oder Fachmethodik II und ist aus 4 SWS Praktikum und 2 SWS Seminar aufgebaut. Das wichtigste Ziel besteht darin, Ihnen einen sicheren Umgang mit R beizubringen.Den Leistungsnachweis bildet ein benoteter Praktikumsbericht.","code":""},{"path":"einfuehrung.html","id":"lernziele-des-kurses","chapter":"Kapitel 1 Der Kurs","heading":"1.2 Lernziele des Kurses","text":"\nDaten f√ºr Analysen vorbereiten\n\neigene wiederverwendbare Skripte schreiben\n\neigene Funktionen schreiben\n\neinfache Datenanalysen durchf√ºhren\n\nDaten visualisieren\n\nErgebnisse reproduzierbar im Praktikumsbericht darstellen\n","code":""},{"path":"einfuehrung.html","id":"was-mir-im-umgang-miteinander-wichtig-ist","chapter":"Kapitel 1 Der Kurs","heading":"1.3 Was mir im Umgang miteinander wichtig ist","text":"P√ºnktlichkeit bei LivesitzungenGute Vorbereitung durch erledigen der HausaufgabenRespektieren anderer MeinungenOffenheit gegen√ºber neuen Sichtweisen, Themen und MethodenGeduld mit sich selbst und den anderen üòÑ","code":""},{"path":"erste-schritte.html","id":"erste-schritte","chapter":"Kapitel 2 Erste Schritte in R","heading":"Kapitel 2 Erste Schritte in R","text":"\nLayout und Bedeutung einzelner Fenster RStudio kennen\n\nAnweisungen aus dem Skript die Konsole schicken\n\nR als Taschenrechner benutzen\n\nerste Funktionen aufrufen\n\nObjekte mit eckigen Klammern [ ] ansprechen\n\nR-Hilfeseiten aufrufen\n\nIhren ersten Olot erstellen\n","code":""},{"path":"erste-schritte.html","id":"was-ist","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.1 Was ist ?","text":"R ist eine Programmiersprache f√ºr Datenanalyse und statistische Modellierung. Es ist frei verf√ºgbar (open source software) und neben Python einer der meisten benutzten Programmiersprachen zur Datenanalyse und -visualisierung. R wurde von Ross Ihaka und Robert Gentleman 1996 ver√∂ffentlicht (Ihaka Gentleman 1996). Es gibt f√ºr R eine Vielzahl von Zusatzpaketen, die die Funktionalit√§t und die Einsatzm√∂glichkeiten enorm erweitern.Sie k√∂nnen R f√ºr Ihren Computer auf der offiziellen R-Seite https://www.r-project.org/ herunter laden und installieren. Auch die Pakete finden Sie dort unter CRAN (Comprehensive R Archive Network). Auf den CRAN-Seiten finden Sie sogen. CRAN Task Views, eine √úbersicht √ºber Pakete verschiedenen Themenbereichen. F√ºr den Umweltbereich sind folgende Paketsammlungen besonders relevant:Environmetrics: Analyse von UmweltdatenMultivariate: Multivariate StatistikSpatial: Analyse von r√§umlichen DatenTimeSeries: ZeitreihenanalyseZu Beginn des Kurses, werden wir jedoch nicht auf Ihren lokalen Rechnern arbeiten, sondern auf der RStudio Server Pro, der extra f√ºr die digitale Lehre mit R der UzK eingef√ºhrt wurde. Das erm√∂glicht einen schnelleren Einstieg R und bietet eine fast-live Unterst√ºtzung durch den Dozenten beim Programmieren. Daher biete ich zu diesem fr√ºhen Zeitpunkt im Kurs keine Unterst√ºtzung bei der Installation von R auf Ihren Privatrechnern. F√ºr die ganz Ungeduldigen, gibt es hier eine kurze Einleitung zur Installation.","code":""},{"path":"erste-schritte.html","id":"was-ist-rstudio","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.2 Was ist RStudio?","text":"RStudio Desktop ist eine Entwicklungsumgebung f√ºr R. Sie k√∂nnen die open source Version kostenlos f√ºr Ihren Rechner hier herunterladen.Es gibt eine live Einf√ºhrung RStudio im Kurs. Zus√§tzlich k√∂nnen Sie hier ein Video dazu ansehen.","code":""},{"path":"erste-schritte.html","id":"rstudio-server-pro","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.3 RStudio Server Pro","text":"","code":""},{"path":"erste-schritte.html","id":"einloggen-und-eine-session-starten","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.3.1 Einloggen und eine Session starten","text":"Zu Beginn des Kurses werden wir auf dem RStudio Server Pro (RSSP) arbeiten. Jede(r) von Ihnen wird ein pers√∂nliches Login f√ºr den Server erhalten. Dieses Login darf nicht weiter gegeben werden. Damit ich mich im Falle von Programmierfehlern Ihre Konto einloggen darf, m√ºssen Sie eine Einwilligung unterschreiben und per Email Herrn Dr.¬†Bolten schicken (andreas.bolten@uni-koeln.de).Bevor Sie sich auf dem RSSP einloggen k√∂nnen, m√ºssen Sie Ihre VPN-Verbindung aktivieren (aus dem Uni-Netz geht es auch ohne). Auf den Seiten der Rechenzentrums finden Sie eine Anleitung zur Einrichtung des VPN-Zugangs.Anschlie√üend k√∂nnen Sie sich hier einloggen. Alternativ k√∂nnen Sie die Adresse des Servers https://cheops-rstudio-edu.rrz.uni-koeln.de:8787/auth-sign-.htm Ihren Browser kopieren. Nach dem Einloggen sehen Sie die Home-Oberfl√§che, aus der Sie eine neue Sitzung starten k√∂nnen (Abbildung 2.1).\nAbbildung 2.1: RStudio Server Pro Home\nUm eine neue Sitzung zu starten, klicken Sie auf den blauen Button + New Session oder auf New Session neben dem R-Symbol und stellen Sie Folgendes ein (Sie d√ºrfen der Session einen anderen Namen geben, wenn Sie m√∂chten):\nAbbildung 2.2: Einstellungen f√ºr neue Session\nAnschlie√üend sehen Sie die neue Sitzung, auf die Sie nur noch klicken m√ºssen, damit es los geht:\nAbbildung 2.3: Neue Sitzung erstellt\nDer gro√üe Vorteil des RSSPs ist, dass ich direkt Ihre Projekte eingreifen kann, wenn es mal zu Fehlern kommt. W√§hrend ich Ihrem Projekt arbeite, werden Sie kurz aus der R-Sitzung ausgeloggt. Ihnen stehen auf dem Server unbegrenzt Arbeitsstunden zur Verf√ºgung.Sowohl auf dem RSSP als auch einer lokalen Installation, ist Ihr RStudio aufgebaut wie Abbildung 2.4.\nAbbildung 2.4: Aufbau von RStudio\n","code":""},{"path":"erste-schritte.html","id":"dateimanagement","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.3.2 Dateimanagement","text":"Sie werden regelm√§√üig Dateien die Sitzungen auf den RSSP hoch laden und auch herunter laden m√ºssen. F√ºr eine √ºbersichtliche Organisation bietet es sich , einen Ordner f√ºr Dateien anzulegen. Klicken Sie daf√ºr auf New Folder auf dem Reiter Files rechts unten und geben Sie dem Ordnder den Namen data.Um Dateien hoch zu laden, klicken Sie auf den Button Upload auf dem Reiter Files rechts unten (Abbildung 2.5).\nAbbildung 2.5: Dateien hoch laden\nAnschlie√üend klicken Sie auf den Button Browse unter der √úberschrift ‚ÄúFile upload‚Äù und navigieren zu der Datei, die Sie hoch laden m√∂chten (Abbildung 2.6).\nAbbildung 2.6: Dateien zum Hochladen ausw√§hlen\nUm Dateien herunter zu laden, markieren Sie zun√§chst die Datei oder die Dateien, die Sie herunterladen m√∂chten. Dann klicken Sie auf den Button im Reiter Files und dann auf Export und anschlie√üend auf Download (Abbildungen 2.7 und 2.8). Speichern Sie die Datei(en) auf Ihrem Rechner.\nAbbildung 2.7: Dateien zum herunter laden ausw√§hlen und herunter laden\n\nAbbildung 2.8: Dateien zum Herunterladen speichern\nSie sollten auch auf Ihrem eigenen Rechner einen Ordner f√ºr die Veranstaltung anlegen und darin jeweils einen Ordner f√ºr Daten und Skripte.","code":""},{"path":"erste-schritte.html","id":"lesestoff","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.4 Lesestoff","text":"Kapitel 1.1 und 1.2 Ismay Kim (2021).","code":""},{"path":"erste-schritte.html","id":"aufgaben","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.5 Aufgaben","text":"","code":""},{"path":"erste-schritte.html","id":"ars-haushaltsbuch","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.5.1 Ars Haushaltsbuch","text":"Der angehende Datenanalyst Ar Stat m√∂chte dem Rat seiner Mutter folgen und ein Haushaltsbuch anlegen. Als erstes m√∂chte er sich einen √úberblick √ºber seine Ausgaben der Uni-Mensa verschaffen und erstellt die folgende Tabelle:\nTabelle 2.1: Ars Mensaausgaben\nWie viel hat Ar insgesamt der Woche ausgegeben?Wie viel hat er im Schnitt pro Tag ausgegeben?Wie stark schwanken seine Ausgaben?Leider hat Ar sich beim √ºbertragen der Daten vertippt. Er hat Dienstag seine Freundin zum Essen eingeladen und 7,95 ‚Ç¨ statt 2,90 ‚Ç¨ ausgegeben.Korrigieren Sie Ars Fehler.Wie ver√§ndern sich die Ergebnisse aus den Teilaufgaben 1 bis 3 Warum?","code":""},{"path":"erste-schritte.html","id":"rob2","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.5.2 Fehlende Werte","text":"R kodiert fehlende Werte mit NA. Ar Stat hat Montag der darauffolgenden Woche der Mensa gegessen, aber vergessen die Ausgaben zu notieren.\nTabelle 2.2: Ars Mensaausgaben, cont.\nWie √§ndert der fehlende Wert die Berechnung der Summe?Lesen Sie passiert, wenn der Datenvektor bei der Berechnung der Summe fehlende Werte enth√§lt. Rufen Sie dazu die Hilfe auf, .e.¬†?sum.Korrigieren Sie die Berechnung der Summe entsprechend.","code":""},{"path":"erste-schritte.html","id":"firstplot","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.5.3 Ihr erster Plot","text":"Vor allem Anfang kann die Lernkurve R recht flach verlaufen. Daher sollten Sie nicht vergessen, warum Sie R lernen, n√§mlich um echte Datens√§tze zu analysieren.Auch wenn Sie den Code unten noch nicht (ganz) verstehen, kopieren Sie ihn Ihr R und lassen Sie ihn laufen.Welche Daten sind diesem Datensatz enthalten? Nutzen Sie die Hilfe, .e.¬†?gapminder.stellen die Farben der Abbildung dar?wird durch die Symbolgr√∂√üe dargestellt?Wie w√ºrden Sie den Zusammenhang zwischen den Variablen GDP per capita und Life expectancy beschreiben?","code":"\nlibrary(tidyverse)\nlibrary(gapminder)\n\ngapminder2007 <- gapminder %>% \n  filter(year == 2007)\n\nggplot(gapminder2007, aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  xlab('GDP per capita') +\n  ylab('Life expectancy') +\n  labs(title = 'Gapminder data for the year 2007')"},{"path":"erste-schritte.html","id":"r-als-taschenrechner","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.5.4 R als Taschenrechner","text":"R ist ein gro√üer Taschenrechner mit vielen voreingebauten Funktionen. Es gelten die √ºblichen Rechenregeln wie z.B. Punkt-vor-Strich und die Klammern.Schreiben Sie den Code, der 2 und 10 addiertDas korrekte Multiplikationszeichen R ist *.Geben Sie den folgenden Befehl korrekt R ein: (2 + 10) \\(\\times\\) 27Bei Dezimalzahlen wird der Dezimalpunkt und nicht das Komma verwendet. Das ist wichtig zu beachten, wenn Sie sp√§ter Daten R einlesen m√∂chten.Berechnen Sie die Summe von 2,34 und 4,98.","code":""},{"path":"erste-schritte.html","id":"zuweisungen","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.5.5 Zuweisungen","text":"R arbeitet man mit Objekten. Ein Objekt kann alles M√∂gliche sein: eine Variable, Daten, Vektoren etc. Wenn also das Ergebnis einer Berechnung oder ein Datenobjekt im R-Arbeitsbereich (workspace) zur Verf√ºgung stehen soll, muss daraus ein Objekt erstellt werden.Objekte erstellt man, indem man ihnen Namen gibt. Diesen Vorgang nennt man Zuweisung (assignment). Im Beispiel unten wird ein Objekt, diesem Fall ein Skalar, namens x erzeugt mit dem Wert 42. Um den Wert von x anzuzeigen, tippen Sie x ein.Zuweisungen k√∂nnen R entweder mit dem = erfolgen oder mit <-. Beide Varianten sind gleichwertig. Dabei ist allerdings Pfeilrichtung entscheidend! x <- 42 bedeutet: die linke Seite (Zahl 42) wird dem Objekt x zugeordnet. Wenn man die Pfeilrichtung umdreht, macht die Zuweisung keinen Sinn und man erh√§lt eine Fehlermeldung.Objektnamen k√∂nnen (fast) frei gew√§hlt werden. Sie m√ºssen mit einem Buchstaben beginnen und d√ºrfen keine Sonderzeichen enthalten. Bei l√§ngeren Namen empfiehlt sich ein _. Streng verboten sind Namen von vordefinierten Funktionen!Erstellen Sie ein Objekt namens mein_objekt und weisen Sie ihm das Ergebnis der Berechnung \\(23^{2}\\) zu. Eine Potenz berechnen Sie mit ^.Eine Zuweisung kann auch kompliziertere Anweisungen enthalten. Hier erstellen wir z.B. einen Vektor mit Hilfe der Funktion c (concatenate) und weisen das Ergebnis dem Objekt my_a zu.","code":"\nx <- 42\n\n# Zeige den Wert von x\nx\n# Sinnvolle Zuweisung\nx <- 42\n# Gleichwertige sinnvolle Zuweisung\nx = 42\n# Sinnloser Ausdruck. Fehlermeldung!\nx -> 42## Error in 42 <- x: ung√ºltige (do_set) linke Seite in Zuweisung\nmy_a <- c(32, 54, 1.2, 398)"},{"path":"erste-schritte.html","id":"funktionsaufruf","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.5.6 Funktionsaufruf","text":"R gibt es eine Vielzahl von vordefinierten Funktionen. Ein kleine √úbersicht davon haben Sie unserem Begleitskript im Kapitel 3. Ein Funktionsaufruf hat immer die gleiche Form: mach_das(damit) oder mach_das(damit, und_mit_dieser_einstellung). Z.B. wird die Summe auf einem Objekt mein_objekt mit sum(mein_objekt) berechnet.Erstellen Sie einen Vektor mit den Zahlen 32, 54, 1,2 und 398 und weisen Sie ihn der Variablen my_a zu.Berechnen Sie die summe von my_a.Sie k√∂nnen im √úbrigen auch Vektoren sinnvoll addieren.Erstellen Sie einen Vektor my_b mit der passenden L√§nge und addieren Sie ihn zum Vektor my_a. Die Addition erfolgt elementeweise.H√§ufig wollen wir f√ºr unsere Daten den Mittelwert berechnen.Berechnen Sie den Mittelwerts von my_aBerechnen Sie die Standardabweichung von my_a.","code":""},{"path":"erste-schritte.html","id":"objekte-ansprechen","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.5.7 Objekte ansprechen","text":"Um das ‚ÄúInnenleben‚Äù der Objekte R anzusprechen, gibt es verschieden M√∂glichkeiten. diesem Tutorial konzentrieren wir uns auf Vektoren. Um die einzelnen Komponenten im Vektor anzusprechen, benutzt man eckige Klammern [ ]. Um eine bestimmte Komponente zu adressieren (anzusprechen), schreibt man die Platznummer der Komponente die Klammer. Wenn man im Vektor my_c, z.B. die dritte Komponente extrahieren m√∂chte, dann schreibt man my_c[3]Wir k√∂nnen auch Vektoren erstellen, bei denen einzelne Elemente benannt sind.Elemente solchen Vektoren kann man mit Namen eckigen Klammern ansprechen. Die Namen m√ºssen Anf√ºhrungszeichen geschrieben werden. Es spielt keine Rolle, ob Sie einfache oder doppelte Anf√ºhrungszeichen benutzen.Fragen Sie nach dem Element Koeln im Vektor benannt.","code":"\nmy_c <- c(2, 45.7, pi, sqrt(23), 2^6)\nmy_c[3]## [1] 3.141593\nbenannt <- c('Koeln' = 50667, 'Berlin' = 10965, \"Stuttgart\" = 70173)"},{"path":"erste-schritte.html","id":"ihre-arbeit-einreichen","chapter":"Kapitel 2 Erste Schritte in R","heading":"2.6 Ihre Arbeit einreichen","text":"Speichern Sie Ihre .R Datei auf dem Server ab.Laden Sie diese Datei herunter und speichern Sie sie auf Ihrem Computer ab.Laden Sie die Datei auf ILIAS der dazugeh√∂rigen √úbung hoch.Nach der Abgabe erhalten Sie die Musterl√∂sung.Vergelichen Sie Ihre L√∂sung sebstst√§ndig mit der Musterl√∂sung.Stellen Sie entweder Campuswire (im class-chat) oder der n√§chsten live Sitzung Fragen, falls Sie bei den Aufgaben etwas nicht verstanden haben und die Musterl√∂sung es nicht aufkl√§ren konnte.","code":""},{"path":"reproduzieren.html","id":"reproduzieren","chapter":"Kapitel 3 R Markdown","heading":"Kapitel 3 R Markdown","text":"\nWichtigkeit der Reproduzierbarkeit erkl√§ren\n\nBegriff literate programming definieren\n\nAufbau einer RMarkdown-Datei erkl√§ren\n\nEinen einfachen ersten reproduzierbaren Bericht schreiben\n","code":""},{"path":"reproduzieren.html","id":"warum-reproduzierbarkeit-in-der-forschung-wichtig-ist","chapter":"Kapitel 3 R Markdown","heading":"3.1 Warum Reproduzierbarkeit in der Forschung wichtig ist","text":"","code":""},{"path":"reproduzieren.html","id":"literate-programming-idee-von-donald-knuth","chapter":"Kapitel 3 R Markdown","heading":"3.2 Literate Programming Idee von Donald Knuth","text":"Die Idee, dass man den Code und die dazugeh√∂rige Interpretation (Text, Bericht etc.) nicht von einander trennen sollte, geht auf Knuth (1984) zur√ºck. Mit Literate Programming meinte Knuth, dass Programme auch nichts anderes wie literarische Werke sind. Er setzte den Fokus darauf, mit Programmen menschlichen Benutzern zu erkl√§ren, man den Computer machen lassen m√∂chte. Also weg vom computer- hin zum mensch-zentrierten Zugang. wird Programmieren und unserem Fall die Datenanalyse verst√§ndlich und vor allem reproduzierbar.Leider ist es unserer modernen Forschungslandschaft immer noch nicht Standard. Das Trennen von Analyseergebnissen und Berichten (Forschungsartikeln) sorgt f√ºr viele (unentdeckte und unn√∂tige) Fehler und Frust.","code":""},{"path":"reproduzieren.html","id":"reproduzierbare-berichte-mit-r-markdown","chapter":"Kapitel 3 R Markdown","heading":"3.3 Reproduzierbare Berichte mit R Markdown","text":"R hat sein eigenes System von reproduzierbaren Berichten, genannt R Markdown (Xie, Allaire, Grolemund 2021). Es ist benutzerfreundlich und erm√∂glicht unterschiedliche Formate von Berichten, wie HTML-Dokumente, PDF-Dateien, Pr√§sentationsfolien usw.Es wird Sie vielleicht √ºberraschen, aber das Skript, das Sie gerade lesen ist nichts anderes als ein ‚Äúliterarisch‚Äù programmiertes Buch R Bookdown (Xie, Allaire, Grolemund 2021), einem R-Paket speziell f√ºr lange R Markdown-Dokumente.Wir werden vor allem mit R Notebooks arbeiten, die eine gute Interaktion zwischen dem geschriebenen Text und dem R-Code erm√∂glichen. Das Notebook kann sowohl ein HTML-Dokument als auch PDF oder Word als endg√ºltiges Dokument umgewandelt werden. Diesen Prozess nennt man knit.","code":""},{"path":"reproduzieren.html","id":"ein-neues-r-notebook-erstellen","chapter":"Kapitel 3 R Markdown","heading":"3.4 Ein neues R Notebook erstellen","text":"Um ein neues R Notebook zu erstellen, klicken Sie das leine gr√ºne Plus oben links und w√§hlen Sie R Notebook aus. Sie k√∂nnen es erst einmal bei untitled belassen (Abbildung 3.1).\nAbbildung 3.1: Neues R Notebook anlegen\nWenn Sie ein neues Notebook erstellen, enth√§lt das Template etwas Code. Lesen Sie sich das ruhig noch einmal durch, da es ein paar hilfreiche Tastenk√ºrzel und Tipps. Danach k√∂nnen Sie den Text unterhalb des Headers l√∂schen.","code":""},{"path":"reproduzieren.html","id":"header","chapter":"Kapitel 3 R Markdown","heading":"3.5 Der Header eines Notebooks","text":"Ein R Notebook (und jedes andere R Markdown Dokument) besteht aus einem Header (Kopf) und dem eigentlichen Text und Code. Der Header hat dabei ein bestimmtes Layout, auf das Sie unbedingt achten m√ºssen (Rechtschreibung!). Der Header ist immer zwischen drei Minuszeichen --- eingeschlossen. Bei komplizierteren Headern gibt es auch Einr√ºckungen (mit der Tab-Taste), die auch Bedeutung haben (s. weiterf√ºhrende Literatur). Wir bleiben bei einem einfachen Header ohne Einr√ºckungen (Abbildung 3.2).\nAbbildung 3.2: Einen neuen Chunk hinzuf√ºgen\nText kann einfach unterhalb des Headers und au√üerhalb der Chunks getippt werden. Die wichtigsten Layoutelemente f√ºr den Text finden Sie hier. R Markdown unterst√ºtzt mathematische Notation Latex-Stil. Eine Einf√ºhrung Latex w√ºrde dieser Stelle aber zu weit f√ºhren.Das R Notebook hat den Vorteil, dass man √ºber den Button Preview oben der Leiste sofort die Ergebnisse anzeigen lassen kann. Sie m√ºssen also nicht knitten. Falls Sie es doch m√∂chten, klicken Sie auf das kleine Dreieck neben dem Preview und suchen Sie sich ein Output-Format aus. Ein einmal ‚Äúgeknittetes‚Äù Notebook ist kein Notebook mehr (kein Preview). Damit es wierder zum Nobebook wird, m√ºssen Sie im Header output: html_notebbok einstellen (Abbildung 3.2).","code":""},{"path":"reproduzieren.html","id":"wichtigste-regeln-f√ºr-reproduzierbarkeit","chapter":"Kapitel 3 R Markdown","heading":"3.6 Wichtigste Regeln f√ºr Reproduzierbarkeit","text":"","code":""},{"path":"reproduzieren.html","id":"lesestoff-1","chapter":"Kapitel 3 R Markdown","heading":"3.7 Lesestoff","text":"Intro zu Kapitel 2 (Basics), Kapitel 3.2.1 und 3.2.2 Xie, Allaire, Grolemund (2021)","code":""},{"path":"reproduzieren.html","id":"weiterf√ºhrende-literatur","chapter":"Kapitel 3 R Markdown","heading":"3.8 Weiterf√ºhrende Literatur","text":"r4ds, Kapitel 27 (Wickham Grolemund 2021)","code":""},{"path":"reproduzieren.html","id":"aufgaben-1","chapter":"Kapitel 3 R Markdown","heading":"3.9 Aufgaben","text":"","code":""},{"path":"reproduzieren.html","id":"erstes-notebook","chapter":"Kapitel 3 R Markdown","heading":"3.9.1 Erstes Notebook","text":"Erstellen Sie ein R Notebook.F√ºgen Sie Layoutelemente hinzu:\n√úberschrift\nUnter√ºberschrift\nkursiver Text\neine Hochzahl: R2\nein Mathematikelement: \\(x^2\\)\neine Liste\n√úberschriftUnter√ºberschriftkursiver Texteine Hochzahl: R2ein Mathematikelement: \\(x^2\\)eine ListeNutzen Sie die unter 3.5 verlinkte Liste der Layoutelemente.","code":""},{"path":"reproduzieren.html","id":"erste-schritte-als-notebook","chapter":"Kapitel 3 R Markdown","heading":"3.9.2 Erste Schritte als Notebook","text":"Wandeln Sie beide R-Skripte der ersten Sessions R Notebooks um.F√ºgen Sie mehr Erkl√§rungstext zu den einzelnen Schritten hinzuGliedern Sie Ihre Notebooks mit passenden Layoutelementen.","code":""},{"path":"reproduzieren.html","id":"exploration-eines-datensatzes","chapter":"Kapitel 3 R Markdown","heading":"3.9.3 Exploration eines Datensatzes","text":"Arbeiten Sie das Kapitel 1.4 Explore first datasets Ismay Kim (2021) durch.","code":""},{"path":"ggplot.html","id":"ggplot","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"Kapitel 4 Einf√ºhrung in ggplot2","text":"\nAufbau des Aufrufs der Funktion ggplot() kennen\n\n5 wichtigste Grafiktypen kennen und einsetzten\n","code":""},{"path":"ggplot.html","id":"aufbau-eines-visualisierungsbefehls","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.1 Aufbau eines Visualisierungsbefehls","text":"Das Paket ggplot2 ist ein sehr m√§chtiges Visualisierungswerkzeug. Der Name steht f√ºr ‚Äúgrammar graphics.‚Äù Das Bedeutet, dass man mit Hilfe von verschiedenen Funktion ggplot2 seine Grafik Schritt f√ºr Schritt aufbaut, wie einen (grammatikalisch korrekten) Satz. aller K√ºrze bedeutet das:Eine statistische Grafik ist eine Zuordnung (mapping) von Variablen einem Datensatz (data) zu (√§sthetischen) Attributen (aes) von geometrischen Objekten (geom).Wir m√ºssen also f√ºr das Visualisieren Folgendes festlegen:data: der Datensatz, der die Variablen enth√§lt, die wir darstellen m√∂chten.data: der Datensatz, der die Variablen enth√§lt, die wir darstellen m√∂chten.aes: (√§sthetische) Attribute f√ºr die geometrischen Objekte, die dargestellt werden sollen. Diese Attribute sind, z.B. die x und y Koordinaten, Farbe, Form und Gr√∂√üe der geometrischen Obekteaes: (√§sthetische) Attribute f√ºr die geometrischen Objekte, die dargestellt werden sollen. Diese Attribute sind, z.B. die x und y Koordinaten, Farbe, Form und Gr√∂√üe der geometrischen Obektegeom: geometrische Objekte, die dargestellt werden sollen, z.B. Punkte, Linien, Boxen, S√§ulen etc.geom: geometrische Objekte, die dargestellt werden sollen, z.B. Punkte, Linien, Boxen, S√§ulen etc.Wir laden zun√§chst die n√∂tigen Bibliotheken und filtern den Datensatz gapminder, um nur die Daten aus dem Jahr 2007 zu visualisieren. Die Bibliothek ggplot2 ist tidyverse enthalten und wird mitgeladen.","code":"\nlibrary(tidyverse)\nlibrary(gapminder)\n\ngapminder2007 <- gapminder %>% \n  filter(year == 2007)"},{"path":"ggplot.html","id":"punktdiagramm","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.2 Punktdiagramm","text":"Ein typischer Befehl zur Visualisierung w√ºrde also aussehen:Worten k√∂nnte man es vielleicht wie folgt umschreiben:Nimm den Datensatz (data) gapminder undNimm den Datensatz (data) gapminder undordne folgende Attribute zu:\nauf die x-Achse die Variable gdpPercap\nauf die y-Achse die Variable lifeExp\nf√§rbe ein mit Hilfe der Variablen continent\nbestimme die Gr√∂√üe der Symbole mit Hilfe der Variablen pop\nordne folgende Attribute zu:auf die x-Achse die Variable gdpPercapauf die y-Achse die Variable lifeExpf√§rbe ein mit Hilfe der Variablen continentbestimme die Gr√∂√üe der Symbole mit Hilfe der Variablen popStelle das Ganze als geometrisches Objekte Punkte dar (deom_point())Stelle das Ganze als geometrisches Objekte Punkte dar (deom_point())Sie sehen, dass diese Zuordnungen klar nach einer Legende verlangen, die dann auch automatisch sowohl f√ºr die Farbe als auch f√ºr die Gr√∂√üe der Symbole, erstellt wird.Die Anweisungen zur Visualisierung ggplot2 werden mit einem + verbunden. Man kann (und diesem Fall soll) weitere Anweisungen geben. Z.B. sind die Beschriftungen der beiden Achsen nichtssagend und m√ºssen verbessert werden. Wir h√§ngen mit eine +-Zeichen weitere Befehle hinzu:","code":"\nggplot(data = gapminder2007, mapping = aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +\n  geom_point()\nggplot(data = gapminder2007, mapping = aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)) +\n  geom_point() + \n  labs(x = 'Bruttoinlandsprodukt pro Kopf (US$)', y = 'Lebenserwartung (Jahre)',\n       color = 'Kontinent', size = 'Bev√∂lkerung')"},{"path":"ggplot.html","id":"weitere-geoms","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.3 Weitere geoms","text":"Das geom_point() produziert eine xy-Grafik (scatter plot). Weiter wichtige Grafiktypen sindgeom_line(): Liniengeom_histogram(): Histogrammgeom_boxplot(): Boxplotgeom_bar(): S√§ulen","code":""},{"path":"ggplot.html","id":"scatter","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.4 Liniendiagramm","text":"Es macht wenig Sinn, die obere Grafik mit Linien darzustellen. Allerdings eignen sich Linien sehr gut, um einen zeitlichen Verlauf zu visualisieren. Daher filtern wir aus dem Datensatz gapminder die Zeitreihen f√ºr Frankreich und Deutschland heraus. Weil wir jetzt zwei L√§nder haben m√∂chten, muss beim Filtern ein Vektor mit L√§ndernamen angegeben werden und statt == der Operator %%. Wir werden sp√§ter noch ausf√ºhrlich auf diese Operatoren zur√ºck kommen.","code":"\nfrance_germany <- gapminder %>% \n  filter(country %in% c('France', 'Germany'))\nggplot(data = france_germany, mapping = aes(x = year, y = gdpPercap, color = country)) +\n  geom_line()"},{"path":"ggplot.html","id":"histogramm","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.5 Histogramm","text":"Wie ist das GDP im Jahre 2007 Afrika und Europa verteilt? Dazu nutzen wir das Histogramm und filtern die Daten vorher entsprechend. Als √Ñsthetik eignet sich hier fill besser als color.","code":"\nafrica_europe <- gapminder2007 %>% \n  filter(continent %in% c('Africa', 'Europe'))\n\nggplot(africa_europe, mapping = aes(x = gdpPercap, fill = continent)) +\n  geom_histogram(bins = 20)"},{"path":"ggplot.html","id":"boxplot","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.6 Boxplot","text":"Wie ist das GDP im Jahre 2007 auf verschiedenen Kontinenten verteilt? Ein Histogramm mit allen Kontinenten w√ºrde schnell sehr un√ºbersichtlich werden. Das geht mit einem Boxplot besser.","code":"\nggplot(gapminder2007, mapping = aes(x = continent, y = gdpPercap)) +\n  geom_boxplot()"},{"path":"ggplot.html","id":"s√§ulendiagramm","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.7 S√§ulendiagramm","text":"Wie viele Eintr√§ge gibt es pro Kontinent? Das S√§ulendiagramm z√§hlt f√ºr uns die Eintr√§ge im Datensatz zusammen","code":"\nggplot(data = gapminder, mapping = aes(x = continent)) +\n  geom_bar()"},{"path":"ggplot.html","id":"lesestoff-2","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.8 Lesestoff","text":"Kapitel 2.1 Ismay Kim (2021)","code":""},{"path":"ggplot.html","id":"aufgaben-2","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.9 Aufgaben","text":"","code":""},{"path":"ggplot.html","id":"grafiken-richtig-beschriften","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.9.1 Grafiken richtig beschriften","text":"Bis auf die Grafik 4.4 fehlen bei den Grafiken oben ordentliche Achsenbeschriftungen und Titel f√ºr die Legenden. Erg√§nzen Sie den Code entsprechend.","code":""},{"path":"ggplot.html","id":"zeitreihen","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.9.2 Zeitreihen","text":"Stellen Sie den zeitlichen Verlauf der Lebenserwartung f√ºnf europ√§ischen L√§ndern Ihrer Wahl dar. F√§rben Sie die Linien nach L√§ndern.","code":""},{"path":"ggplot.html","id":"boxplots","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.9.3 Boxplots","text":"Stellen Sie die Lebenserwartung im Jahr 1952 und im Jahr 2007 pro Kontinent dar. Das sind zwei verschiedene Boxplots.","code":""},{"path":"ggplot.html","id":"ihre-arbeit-einreichen-1","chapter":"Kapitel 4 Einf√ºhrung in ggplot2","heading":"4.10 Ihre Arbeit einreichen","text":"Speichern Sie Ihr Notbook ab und laden Sie nur die .Rmd Datei vom Server.Laden Sie Ihre .Rmd Datei ILIAS hoch. Beachten Sie die Deadline!Sie erhalten die Musterl√∂sung nach dem Hochladen.","code":""},{"path":"daten-einlesen-und-visualisieren.html","id":"daten-einlesen-und-visualisieren","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"Kapitel 5 Daten einlesen und visualisieren","text":"\nDaten aus Textdateien R einlesen\n\ndata.frame speichern\n\nGrafiken anpassen (nebeneinander, Facetten, Transparenz)\n\nGrafiken speichern\n","code":""},{"path":"daten-einlesen-und-visualisieren.html","id":"daten-aus-textdateien-in-r-einlesen","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.1 Daten aus Textdateien in R einlesen","text":"Um Daten aus Textdateien (z.B. aus .csv, .txt, .dat) R zu importieren (.e.¬†einzulesen) werden wir die Bibliothek readr aus tidyverse benutzen. Wir laden erst einmal tidyverse.Wir gehen davon aus, dass die Daten im Ordner data gespeichert sind. Falls Ihre Daten einem anderen Ort abgelegt sind, m√ºssen Sie den Pfad beim Einlesen entsprechend anpassen.Um die Daten zu laden, gibt es der Bibliothek readr verschiedene Funktionen, die alle mit read_ beginnen. Die allgemeinste davon ist read_delim. Darin kann man explizit einstellen, mit welchem Zeichen (z.B. Komma, Strichpunkt etc.) die einzlenen Spalten der zu importierenden Datei getrennt sind.Ein kurzer Blick auf den Datensatz. Hierbei handelt es sich um Daten zu Treibhausgasemissionen auf der EU-Ebene, die ich bei eurostat heruntergeladen und vorgefiltert habe. Die Datenbank bietet sehr viele Datens√§zte und ist als Quelle f√ºr Berichte hervorragend geeignet üòÑ.Das Ergebnis des Einlesens mit read_ Funktionen ist immer ein tibble. Kategorische Variablen werden als Text (character) eingelesen und nicht factor umgewandelt. Wenn man factor m√∂chte, muss man die Variablen per Hand umwandeln.Wir verschaffen uns einen kurzen √úberblick √ºber die Daten.Um die Anzahl der einzelnen L√§nder zu ermitteln, sehen wir uns die L√§nge der Ausgabe der Funktion unique() , die die einzelnen verschiedenen Eintr√§ge ermitteln kann. Es sind Eintr√§ge f√ºr 33 verschiedene L√§nder vorhanden.","code":"\nlibrary(tidyverse)\nemissions <- read_delim(file = 'data/emissions.csv', delim = ';')## \n## ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n## cols(\n##   unit = col_character(),\n##   airpol = col_character(),\n##   vehicle = col_character(),\n##   geo = col_character(),\n##   time = col_date(format = \"\"),\n##   values = col_double()\n## )\nemissions## # A tibble: 2,871 x 6\n##    unit     airpol                  vehicle    geo             time       values\n##    <chr>    <chr>                   <chr>      <chr>           <date>      <dbl>\n##  1 Million‚Ä¶ Greenhouse gases (CO2,‚Ä¶ Fuel comb‚Ä¶ Austria         2018-01-01  14.4 \n##  2 Million‚Ä¶ Greenhouse gases (CO2,‚Ä¶ Fuel comb‚Ä¶ Belgium         2018-01-01  14.4 \n##  3 Million‚Ä¶ Greenhouse gases (CO2,‚Ä¶ Fuel comb‚Ä¶ Bulgaria        2018-01-01   5.78\n##  4 Million‚Ä¶ Greenhouse gases (CO2,‚Ä¶ Fuel comb‚Ä¶ Switzerland     2018-01-01  11.0 \n##  5 Million‚Ä¶ Greenhouse gases (CO2,‚Ä¶ Fuel comb‚Ä¶ Cyprus          2018-01-01   1.38\n##  6 Million‚Ä¶ Greenhouse gases (CO2,‚Ä¶ Fuel comb‚Ä¶ Czechia         2018-01-01  11.9 \n##  7 Million‚Ä¶ Greenhouse gases (CO2,‚Ä¶ Fuel comb‚Ä¶ Germany (until‚Ä¶ 2018-01-01  97.8 \n##  8 Million‚Ä¶ Greenhouse gases (CO2,‚Ä¶ Fuel comb‚Ä¶ Denmark         2018-01-01   6.85\n##  9 Million‚Ä¶ Greenhouse gases (CO2,‚Ä¶ Fuel comb‚Ä¶ Estonia         2018-01-01   1.52\n## 10 Million‚Ä¶ Greenhouse gases (CO2,‚Ä¶ Fuel comb‚Ä¶ Greece          2018-01-01   7.61\n## # ‚Ä¶ with 2,861 more rows\nsummary(emissions)##      unit              airpol            vehicle              geo           \n##  Length:2871        Length:2871        Length:2871        Length:2871       \n##  Class :character   Class :character   Class :character   Class :character  \n##  Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n##                                                                             \n##                                                                             \n##                                                                             \n##                                                                             \n##       time                values         \n##  Min.   :1990-01-01   Min.   :  0.00609  \n##  1st Qu.:1997-01-01   1st Qu.:  0.25564  \n##  Median :2004-01-01   Median :  1.92403  \n##  Mean   :2004-01-01   Mean   :  8.52836  \n##  3rd Qu.:2011-01-01   3rd Qu.:  6.93899  \n##  Max.   :2018-01-01   Max.   :119.77824  \n##                       NA's   :232\nlength(unique(emissions$geo))## [1] 33"},{"path":"daten-einlesen-und-visualisieren.html","id":"legende-verschieben-und-facetten","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.2 Legende verschieben und Facetten","text":"Wir stellen die Zeitreihen der Emissionen eingef√§rbt nach Land dar. Die L√§nder stehen der Variablen geo.Als erstes f√§llt auf, dass die Legende sehr umfangreich ist (wir haben ja 33 L√§nder im Datensatz). Daher w√§re es g√ºnstig, die Legende unterhalb der Grafik zu positionieren und den Titel der Legende oberhalb der Legende zu belassen. Das geht mit Hilfe der Funktionen theme() und guides(). Wie immer, werden sie im Plotaufbau (denken Sie grammer graphics) mit + angeh√§ngt.Die Zeitreihen sehen echt seltsam aus. Wenn wir uns die Variable vehicle ansehen, wird auch klar, warum. Wir stellen gerade Emissionen f√ºr verschiedene Fahrzeuge dar, d.h. wir mischen mehrere Zeitreihen zusammen.Die einfachste L√∂sung ist, drei verschiedene Grafiken pro Verkehrsmittel zu erstellen. Dies gelingt sehr leicht mit der Funktion facet_wrap(), die den Namen der Variablen erwartet, mit Hilfe derer die Grafiken gesplittet werden sollen. Vor der Variablen muss eine Tilde (~) stehen. unserem Fall wollen wir nach Verkehrsmittel splitten, d.h. mit Hilfe der Varialben vehicle.Da die Emissionen sehr unterschiedlich sind, macht es Sinn, die Skalierungen der y-Achsen anzupassen. Aber Achtung: Das sollten Sie Ihren Berichten unbedingt ansprechen (z.B. der Bildunterschrift), da man unterschiedliche Skalierunge sehr leicht √ºbersieht und dann die Interpretation der Daten leicht die falsche Richtung gehen kann. Der Funktionsparameter labeller = label_wrap_gen() sorgt f√ºr geschickte Zeilenumbr√ºche bei zu langen Labels. Zum Vergleich k√∂nnen Sie ihn mal weglassen und sehen, dann passiert.","code":"\nggplot(data = emissions, mapping = aes(x = time, y = values, colour = geo)) +\n  geom_line()## Warning: Removed 7 row(s) containing missing values (geom_path).\nggplot(data = emissions, mapping = aes(x = time, y = values, colour = geo)) +\n  geom_line() +\n  theme(legend.position = \"bottom\") +\n  guides(colour = guide_legend(title.position = \"top\"))## Warning: Removed 7 row(s) containing missing values (geom_path).\nunique(emissions$vehicle)## [1] \"Fuel combustion in cars\"                       \n## [2] \"Fuel combustion in heavy duty trucks and buses\"\n## [3] \"Fuel combustion in railways\"\nggplot(data = emissions, mapping = aes(x = time, y = values, colour = geo)) +\n  geom_line() +\n  facet_wrap(~vehicle) +\n  theme(legend.position = \"bottom\") +\n  guides(colour = guide_legend(title.position = \"top\"))## Warning: Removed 203 row(s) containing missing values (geom_path).\nggplot(data = emissions, mapping = aes(x = time, y = values, colour = geo)) +\n  geom_line() +\n  facet_wrap(~vehicle, scales = 'free_y', labeller = label_wrap_gen()) +\n  theme(legend.position = \"bottom\") +\n  guides(colour = guide_legend(title.position = \"top\"))## Warning: Removed 203 row(s) containing missing values (geom_path)."},{"path":"daten-einlesen-und-visualisieren.html","id":"fehlerbalken-und-co.","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.3 Fehlerbalken und Co.","text":"Um die Variabilit√§t der Daten grafisch darzustellen, bieten sich Fehlerbalken, Bereiche etc. . Daf√ºr hat ggplot2 spezielle geoms. Hier ein Beispiel aus dem ggplot2 Buch Wickham (2020).Sie sehen, dass man ggplot Objekte wie andere Objekte R zuweisen kann, um mit ihnen sp√§ter zu arbeiten. diesem Fall ist base ein ggplot Objekt.","code":"\ny <- c(18, 11, 16)\ndf <- tibble(x = 1:3, y = y, se = c(1.2, 0.5, 1.0))\n\nbase <- ggplot(df, aes(x, y, ymin = y - se, ymax = y + se))\nbase + geom_pointrange()\nbase + geom_errorbar()\nclass(base)## [1] \"gg\"     \"ggplot\""},{"path":"daten-einlesen-und-visualisieren.html","id":"mehrere-grafiken-nebeneinander","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.4 Mehrere Grafiken nebeneinander","text":"Um mehrere Grafiken nebeneinander zu plotten, nutzen wir die Funktion grid.arrange() aus der Bibliothek gridExtra. Um sie zu nutzen, m√ºssen wir die ggplot Objekte abspeichern und dann mit Hilfe der Funktion grid.arrange, wie der Name schon sagt, ‚Äúarrangieren.‚Äù diesem Fall wollen wir der Gesamtgrafik eine Zeile (nrow = 1), sodass die Grafiken nebeneinander stehen.Um die Grafiken untereinander abzubilden, bestellen wir entsprechend zwei Zeilen.","code":"\nlibrary(gridExtra)\n\np1 <- base + geom_pointrange()\np2 <- base + geom_errorbar()\n\nalles <- grid.arrange(p1, p2, nrow = 1)\nalles <- grid.arrange(p1, p2, nrow = 2)"},{"path":"daten-einlesen-und-visualisieren.html","id":"grafiken-abspeichern","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.5 Grafiken abspeichern","text":"","code":"\nggsave(filename = 'Fehlerbalken.pdf', plot = alles, device = 'pdf', width = 7, height = 5)"},{"path":"daten-einlesen-und-visualisieren.html","id":"weitere-statistsiche-zusammenfassungen-in-grafiken","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.6 Weitere statistsiche Zusammenfassungen in Grafiken","text":"Arbeiten Sie selbst√§ndig das Kapitel 5: Statistical summaries Wickham (2020) (https://ggplot2-book.org/statistical-summaries.html).","code":""},{"path":"daten-einlesen-und-visualisieren.html","id":"lesestoff-3","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.7 Lesestoff","text":"Kapitel 2.2 bis 2.9 Ismay Kim (2021)","code":""},{"path":"daten-einlesen-und-visualisieren.html","id":"aufgaben-3","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.8 Aufgaben","text":"","code":""},{"path":"daten-einlesen-und-visualisieren.html","id":"grafiken-richtig-beschriften-1","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.8.1 Grafiken richtig beschriften","text":"Beschriften Sie die finale Grafik der Zeitreihen (Achsen, Titel, Legende).","code":""},{"path":"daten-einlesen-und-visualisieren.html","id":"bestandesaufnahme","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.8.2 Bestandesaufnahme im Wald","text":"Ar Stat arbeitet als HiWi der AG √ñkosystemforschung und soll im Nationalpark Eifel eine Bestandsaufnahme durchf√ºhren (d.h. Baumh√∂hen und -durchmesser vermessen). Er notiert den BHD (Brusth√∂hendurchmesser) und die Art der B√§ume.Lesen Sie den Datensatz BHD.txt ein und ordnen Sie ihn der Variable BHD zu.Erstellen Sie einen Vektor Nr mit durchlaufenden Baumnummern. Von welcher Art sind die Elemente des Vektors ?F√ºgen Sie die Datens√§tze BHD und Nr zu einem tibble zusammen und benennen Sie die Spalten sinnvoll.L√∂schen Sie den Vektor Nr.Lesen Sie den Datensatz Art.txt ein und ordnen Sie ihn der Variablen art zu.F√ºgen Sie die Art das tibble ein.Erstellen Sie eine Tabelle mit der Anzahl der jeweiligen Arten. Nutzen Sie die Funktion table().Speichern Sie die Tabelle mit write_delim() ab. Schlagen Sie der Hilfe nach, wie diese Funktion arbeitet!","code":""},{"path":"daten-einlesen-und-visualisieren.html","id":"wahlbeteiligung","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.8.3 Wahlbeteiligung bei der Bundestagswahl 2017","text":"Bauen Sie die Grafik nach (Abbildung 5.1).\nAbbildung 5.1: Wahlbeteiligung bei den Bundestagswahlen. Quelle: Der Bundeswahlleiter.\nLesen Sie den Datensatz Wahlbeteiligung.csv R ein und ordnen Sie ihn dem Objekt beteiligung zu.Sehen Sie sich den Datensatz und fassen Sie ihn zusammen.Stellen Sie die Wahlbeteiligung als Funktion der Zeit dar, wie Abbildung 5.1 gezeigt.Beschriften Sie die Grafik.Speichern Sie die Grafik als pdf ab.","code":""},{"path":"daten-einlesen-und-visualisieren.html","id":"zweitstimme","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.8.4 Zweitstimme bei der Bundestagswahl 2017","text":"Bauen Sie die Grafik nach (Abbildung 5.2).\nAbbildung 5.2: Zweitstimme bei der Bundestagswahl 2017. Quelle: Der Bundeswahlleiter.\nLesen Sie den Datensatz Zweitstimme.csv R ein und ordnen Sie ihn dem Objekt zweitstimme zu.Sehen Sie sich den Datensatz und fassen Sie ihn zusammen.Stellen Sie die die Zweitstimmen pro Partei einem S√§ulendiagramm dar. Nutzen Sie das geom geom_col() und lesen Sie den Unterschied zu geom_bar() der Hilfe nach. Tipps:\nDer Variablenname Zweitstimme 2017 enth√§lt ein Leerzeichen. Daher m√ºssen Sie es beim Aufruf zu ggplot unbedingt ‚Äú`‚Äù setzten.\nDamit die Parteien der selben Reihenfolge dargestellt werden, wie im Datensatz angegeben, wandeln Sie die Spalte Partei ein factor um: zweitstimme$Partei <- as_factor(zweitstimme$Partei).\nFarben stellen Sie direkt geom_col() ein mit fill = c('black', 'red', 'magenta', 'darkgreen', 'yellow', 'blue', 'grey')\nDer Variablenname Zweitstimme 2017 enth√§lt ein Leerzeichen. Daher m√ºssen Sie es beim Aufruf zu ggplot unbedingt ‚Äú`‚Äù setzten.Damit die Parteien der selben Reihenfolge dargestellt werden, wie im Datensatz angegeben, wandeln Sie die Spalte Partei ein factor um: zweitstimme$Partei <- as_factor(zweitstimme$Partei).Farben stellen Sie direkt geom_col() ein mit fill = c('black', 'red', 'magenta', 'darkgreen', 'yellow', 'blue', 'grey')Beschriften Sie die Grafik.Speichern Sie die Grafik als pdf ab.","code":""},{"path":"daten-einlesen-und-visualisieren.html","id":"zweigrafiken","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.8.5 Ergebnisse der Bundestagswahl in einer Grafik","text":"Stellen Sie beide Grafiken untereinander dar wie Abbildung (5.3) gezeigt.\nAbbildung 5.3: Ergebnisse der Bundestagswahl 2017. Quelle: Der Bundeswahlleiter.\n","code":""},{"path":"daten-einlesen-und-visualisieren.html","id":"ihre-arbeit-einreichen-2","chapter":"Kapitel 5 Daten einlesen und visualisieren","heading":"5.9 Ihre Arbeit einreichen","text":"Speichern Sie Ihr Notbook ab und laden Sie nur die .Rmd Datei vom Server.Laden Sie Ihre .Rmd Datei ILIAS hoch. Beachten Sie die Deadline!Sie erhalten die Musterl√∂sung nach dem Hochladen.","code":""},{"path":"tidyverse.html","id":"tidyverse","chapter":"Kapitel 6 Der explorative Workflow mit tidyverse","heading":"Kapitel 6 Der explorative Workflow mit tidyverse","text":"\nKernpakete aus tidyverse benennen\n\nein einfaches Workflow (Daten einlesen, zusammenfassen, darstellen) mit tidyverse durchf√ºhren\n\nFunktionen des Pakets dplyr f√ºr Datentransformation anwenden\ntidyverse ist eine Sammlung von R-Pakete, die explizit f√ºr Datenanalyse entwickelt wurden (https://www.tidyverse.org/). tidyverse versucht durch gemeinsame Philosophie Design, Grammatik und Datenstruktur die Datenanalyse zu erleichtern (https://design.tidyverse.org/). Auch wenn tidyverse auf den ersten Blick etwas fremd erscheint, es ist ein Teil von R, kein eigenes Universum. Es ist also v√∂llig Ordnung, R-Basisfunktionen mit Funktionen aus tidyverse zu mischen.Das wichtigste Einf√ºhrungsbuch zu tidyverse ist sicherlich R4DS: ‚ÄúR Data Science‚Äù (Wickham Grolemund 2021), das Sie kostenlos online lesen k√∂nnen (https://r4ds..co.nz/).","code":""},{"path":"tidyverse.html","id":"grundpakete","chapter":"Kapitel 6 Der explorative Workflow mit tidyverse","heading":"6.1 Grundpakete","text":"tidyverse enth√§lt folgende Grundpakete, die alle installiert werden, wenn Sie install.packages('tidyverse') ausf√ºhren.Jedes dieser Pakete hat ein Cheat Sheet, eine √ºbersichtliche Zusammenstellung der Funktionen des Pakets. Sie bekommen die Cheet Sheats √ºber die tidyverse-Seite (https://www.tidyverse.org/packages/), indem Sie auf das jeweilige Paket klicken und zum Abschnitt ‚ÄòCheatsheet‚Äô scrollen.","code":""},{"path":"tidyverse.html","id":"der-explorative-workflow","chapter":"Kapitel 6 Der explorative Workflow mit tidyverse","heading":"6.2 Der explorative Workflow","text":"","code":""},{"path":"tidyverse.html","id":"daten-einlesen-revisited","chapter":"Kapitel 6 Der explorative Workflow mit tidyverse","heading":"6.2.1 Daten einlesen, revisited","text":"Als erstes laden wir die Bibliothek tidyverse.Sie kennen bereits die Funktion read_delim() zum Einlesen von Textdateien. Die Funktion ist die allgemeinste Funktion der read_* Familie aus readr tidyverse; read_csv() und read_csv2() sind jeweils f√ºr komma- und strichpunkt-getrennte Datens√§tze gedacht. der Basisinstallation von R (also au√üerhalb von tidyverse) gibt die sehr umfangreiche Funktion read.table(), die ebenfalls zum Einlesen von Textdateien verwendet wird. Man k√∂nnte berechtigterweise fragen, warum neue Funktion (read_*) f√ºr etwas erfinden, es schon gibt. Die Autoren von tidyverse versprechen Konsistenz und Geschwindigkeit. Ersteres war schon immer ein Problem von R, da es nicht von Computerspezialisten, sondern von Anwendern erfunden wurde. Daher ist eine Vereinheitlichung durch tidyverse mehr als willkommen. Und Geschwindigkeit ist sp√§testens bei gr√∂√üeren Datens√§tzen ein wichtiger Punkt.Wir sehen uns Daten des Deutschen Wetterdienstes , die ich 24. Mai 2020 herunter geladen habe (https://www.dwd.de/DE/leistungen/klimadatendeutschland/klimadatendeutschland.html). Auch das ist eine tolle Datenquelle f√ºr Berichte üòÑ. Der Datensatz enth√§lt Stundenwerte f√ºr relative Luftfeuchte (%) und Lufttemperatur (¬∞C) von drei Wetterstationen, n√§mlich Hof, Frankfurt und K√∂ln-Bonn. Die Daten sind der Datei Drei_Stationen.csv gespeichert.Beim Einlesen zeigt Ihnen read_delim() bereits, welche Spalten und welche Datentypen es erkennt, mit trim_ws = T werden Leerzeichen aus Spalten entfernt.Eine weitere Kontrolle bietet die Funktion print(), die das eingelesene Ergebnis √ºbersichtlich (und im Notebook interaktiv) darstellt. Sie m√ºssen hier nicht head() verwenden, da grunds√§tzlich nur die ersten 10 Zeilen dargestellt werden.Das gleiche Ergebnis bekommen Sie auch ohne print(), wenn Sie wie gewohnt den Namen des Objekts tippen.diesem Datensatz sind folgende Parameter (Spalten) enthalten (s. Datensatzbeschreibung des DWDs)Das Objekt temp_humid ist ein tibble, ein data.frame mit ‚Äúmodernem‚Äù Verhalten. Z.B. gibt die Funktion print() nur die ersten 10 Zeilen aus, die Datentypen den Spalten werden hellgrau zwischen ‚Äò<>‚Äô mit angegeben etc. Mehr zu Tibbles finden Sie Kapitel 10 ‚ÄúTibbles‚Äù R4DS.","code":"\nlibrary(tidyverse)\ntemp_humid <- read_delim('data/Drei_Stationen.csv', delim = ';',    trim_ws = T)## \n## ‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n## cols(\n##   STATIONS_ID = col_double(),\n##   MESS_DATUM = col_double(),\n##   QN_9 = col_double(),\n##   TT_TU = col_double(),\n##   RF_TU = col_double(),\n##   eor = col_character()\n## )\nprint(temp_humid)## # A tibble: 39,600 x 6\n##    STATIONS_ID MESS_DATUM  QN_9 TT_TU RF_TU eor  \n##          <dbl>      <dbl> <dbl> <dbl> <dbl> <chr>\n##  1        2261 2018111900     3  -2.8    99 eor  \n##  2        2261 2018111901     3  -2.5   100 eor  \n##  3        2261 2018111902     3  -2.3   100 eor  \n##  4        2261 2018111903     3  -2     100 eor  \n##  5        2261 2018111904     3  -1.9    99 eor  \n##  6        2261 2018111905     3  -2.1    99 eor  \n##  7        2261 2018111906     3  -1.8    99 eor  \n##  8        2261 2018111907     3  -1.5    99 eor  \n##  9        2261 2018111908     3  -1.1    99 eor  \n## 10        2261 2018111909     3  -0.6    97 eor  \n## # ‚Ä¶ with 39,590 more rows\ntemp_humid## # A tibble: 39,600 x 6\n##    STATIONS_ID MESS_DATUM  QN_9 TT_TU RF_TU eor  \n##          <dbl>      <dbl> <dbl> <dbl> <dbl> <chr>\n##  1        2261 2018111900     3  -2.8    99 eor  \n##  2        2261 2018111901     3  -2.5   100 eor  \n##  3        2261 2018111902     3  -2.3   100 eor  \n##  4        2261 2018111903     3  -2     100 eor  \n##  5        2261 2018111904     3  -1.9    99 eor  \n##  6        2261 2018111905     3  -2.1    99 eor  \n##  7        2261 2018111906     3  -1.8    99 eor  \n##  8        2261 2018111907     3  -1.5    99 eor  \n##  9        2261 2018111908     3  -1.1    99 eor  \n## 10        2261 2018111909     3  -0.6    97 eor  \n## # ‚Ä¶ with 39,590 more rows\nclass(temp_humid)## [1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\""},{"path":"tidyverse.html","id":"geschickter-umgang-mit-zeit-und-datum","chapter":"Kapitel 6 Der explorative Workflow mit tidyverse","heading":"6.3 Geschickter Umgang mit Zeit und Datum","text":"Ein weiteres Paket, dass zwar nicht zum Kern von tidyverse geh√∂rt, jedoch trotzdem extrem n√ºtzlich ist, hei√üt lubridate. Es hilft, Text sehr einfach richtige Datums-Objekte zu transformieren (Base-R muss man sich daf√ºr kryptischen Datumsformate merken). Wir transformieren die Spalte temp_humid$MESS_DATUM ein richtiges Datum mit Uhrzeit. Die Funktion ymd_h() kann character ein richtiges Datumsformat transformieren, wenn das Datum als year, month, day, hour codiert ist. Es gibt noch weitere Varianten der Codierung, die Sie bei Bedarf der Hilfe nachschlagen sollten.","code":"\nlibrary(lubridate)\n\ntemp_humid$MESS_DATUM <- ymd_h(temp_humid$MESS_DATUM)\n\ntemp_humid## # A tibble: 39,600 x 6\n##    STATIONS_ID MESS_DATUM           QN_9 TT_TU RF_TU eor  \n##          <dbl> <dttm>              <dbl> <dbl> <dbl> <chr>\n##  1        2261 2018-11-19 00:00:00     3  -2.8    99 eor  \n##  2        2261 2018-11-19 01:00:00     3  -2.5   100 eor  \n##  3        2261 2018-11-19 02:00:00     3  -2.3   100 eor  \n##  4        2261 2018-11-19 03:00:00     3  -2     100 eor  \n##  5        2261 2018-11-19 04:00:00     3  -1.9    99 eor  \n##  6        2261 2018-11-19 05:00:00     3  -2.1    99 eor  \n##  7        2261 2018-11-19 06:00:00     3  -1.8    99 eor  \n##  8        2261 2018-11-19 07:00:00     3  -1.5    99 eor  \n##  9        2261 2018-11-19 08:00:00     3  -1.1    99 eor  \n## 10        2261 2018-11-19 09:00:00     3  -0.6    97 eor  \n## # ‚Ä¶ with 39,590 more rows"},{"path":"tidyverse.html","id":"daten-zusammenfassen","chapter":"Kapitel 6 Der explorative Workflow mit tidyverse","heading":"6.3.1 Daten zusammenfassen","text":"Die drei Wetterstationen haben folgende IDs:Wir z√§hlen nach, wie viele Messpunkte es pro Station gibt. Dazu m√ºssen wir den Datensatz nach der Variablen STATION_ID gruppieren und dann pro Gruppe die Anzahl der Datenpunkte ermitteln:Die Zeichenkombination %>% hei√üt Pipe-Operator (pipe) und wird als ‚Äòund dann‚Äô gelesen (). Der Ausdruck temp_humid %>% group_by(STATIONS_ID) %>% count() hei√üt also: nimm das Objekt temp_humid, gruppiere es nach der Variablen STATION_ID und dann z√§hle die Eintr√§ge pro Gruppe zusammen. Der Pipe-Operator ist die Kernphilosophie von tidyverse und wird Ihnen √ºberall begegnen. Der Operator stammt aus dem Paket magrittr (https://magrittr.tidyverse.org/). Seine Hauptaufgabe ist es, den Code √ºbersichtlicher und besser lesbar zu machen (vielleicht nicht gleich zu Beginn der Lernkurve aber schon sehr bald üòé).","code":"\nstation_ids <-  c('2261' = 'Hof', '1420' = 'Frankfurt', '2667' = 'Koeln')\ntemp_humid %>% \n  group_by(STATIONS_ID) %>% \n  count()## # A tibble: 3 x 2\n## # Groups:   STATIONS_ID [3]\n##   STATIONS_ID     n\n##         <dbl> <int>\n## 1        1420 13200\n## 2        2261 13200\n## 3        2667 13200"},{"path":"tidyverse.html","id":"die-grammatik-der-datenmanipulation-dplyr","chapter":"Kapitel 6 Der explorative Workflow mit tidyverse","heading":"6.4 Die Grammatik der Datenmanipulation ‚Äì dplyr","text":"Die Funktion count() geh√∂rt zum Paket dplyr, das f√ºr Datentransformationen zust√§ndig ist. Es ist mal wieder eine Grammatik Dieses Paket enth√§lt 5 Grundfunktionen (alle nach Verben benannt, damit man gleich wei√ü, frau tut üòÑ):Wir m√∂chten nur von einer bestimmten Station die Anzahl der Messwerte wissen m√∂chten, dann filtern wir vorher.Beim Filtern l√§uft eine logische Abfrage. D.h. es wird bei jeden Eintrag STATION_ID nachgesehen, ob da der Wert 2667 steht. Wenn da 2667 steht, dann gibt == ein TRUE zur√ºck, wenn da etwas anderes steht, dann gibt == ein FALSE zur√ºck. Und die Funktion filter() beh√§lt nur die Zeilen, bei denen == ein TRUE zur√ºck gegeben hat.Weiter wichtige logische und relationale Operatoren finden Sie hier der Hilfe zu filter(). Hier ein paar einfache BeispieleZudem kann man bei filter() die Anfragen auch kombinieren. Wir wollen z.B. die Stationen K√∂ln und Hof haben. | ist der logische Operator oder. Wenn man also sowohl K√∂ln als auch Hof haben , sagt man: finde alles, entweder gleich K√∂ln oder gleich Hof ist.Das Gleiche erreicht man mit folgendem Code, indem man Frankfurt ausschlie√üt:Alternative kann man auch den Operator %% verwenden. Dieser ist sehr n√ºtzlich, wenn man anhand einer einzelnen Variablen filtert, aber unterschiedliche Eintr√§ge ausw√§hlen m√∂chte (z.B. zwei Messstationen). Es wird bei jeder Zeile der Variablen STATIONS_ID nun √ºberpr√ºft, ob hier entweder 2667 oder 2261 stehen.","code":"\ntemp_humid %>% \n  filter(STATIONS_ID == '2667') %>%\n  count()## # A tibble: 1 x 1\n##       n\n##   <int>\n## 1 13200\ntemp_humid %>% \n  filter(STATIONS_ID == '2667' | STATIONS_ID == '2261') %>%\n  group_by(STATIONS_ID) %>% \n  count()## # A tibble: 2 x 2\n## # Groups:   STATIONS_ID [2]\n##   STATIONS_ID     n\n##         <dbl> <int>\n## 1        2261 13200\n## 2        2667 13200\ntemp_humid %>% \n  filter(STATIONS_ID != '1420') %>%\n  group_by(STATIONS_ID) %>% \n  count()## # A tibble: 2 x 2\n## # Groups:   STATIONS_ID [2]\n##   STATIONS_ID     n\n##         <dbl> <int>\n## 1        2261 13200\n## 2        2667 13200\ntemp_humid %>% \n  filter(STATIONS_ID %in% c('2667', '2261')) %>%\n  group_by(STATIONS_ID) %>% \n  count()## # A tibble: 2 x 2\n## # Groups:   STATIONS_ID [2]\n##   STATIONS_ID     n\n##         <dbl> <int>\n## 1        2261 13200\n## 2        2667 13200"},{"path":"tidyverse.html","id":"daten-plotten","chapter":"Kapitel 6 Der explorative Workflow mit tidyverse","heading":"6.4.1 Daten plotten","text":"Wir sehen uns die Daten erst mal , bevor wir weiter machen. Wir plotten die Temperatur. Weil es sich um Zeitreihen handelt, m√∂chten wir sie eher untereinander als nebeneinander haben. Daher setzen wir bei facet_wrap() den Parameter nrow = 3.","code":"\nggplot(data = temp_humid, aes(x = MESS_DATUM, y = TT_TU)) + \n  geom_line() +\n  facet_wrap(~STATIONS_ID, nrow = 3) +\n  labs(x = 'Zeit', y = 'Temperatur (¬∞C)')"},{"path":"tidyverse.html","id":"daten-zusammenfassen-1","chapter":"Kapitel 6 Der explorative Workflow mit tidyverse","heading":"6.4.2 Daten Zusammenfassen","text":"Wir wollen nun die Monatsmittelwerte und die Standardabweichungen f√ºr die Temperatur berechnen und diese darstellen. Als erstes erstellen wir zwei neue Spalten, die jeweils das Jahr und den Monat beinhalten. Die beiden neuen Spalten werden Ende von temp_humid angeh√§ngt. Um neue Spalten zu erstellen, nutzen wir die Funktion mutate(). Die Funktionen year()und month() geh√∂ren zur Bibliothek lubridate und extrahieren jeweils das Jahr und den Monat aus MESS_DATUM.Jetzt k√∂nnen wir einen neuen Datensatz mit den Mittelwerten erstellen. Daf√ºr gruppieren wir erst einmal die Daten nach STATIONS_ID, year und month. Die Mittelwerte sollen ja je Station, Jahr und Monat berechnet werden. Beim Gruppieren gibt man die Variablen ohne Anf√ºhrungszeichen und ohne einen Vektor zu bilden einfach durch Kommas getrennt .Die Struktur von monthly_means zeigt uns, dass es sich um gruppierte Daten handelt.Da wir aber mit den Daten weiter rechnen wollen, ist es besser, die Gruppierung wieder aufzugeben. Es k√∂nnte sonst sp√§ter Fehlermeldungen geben.Um die Daten als Zeitreihen zu plotten, erstellen wir noch eine ordentliche Zeit-Spalte. Die Funktion parse_date_time() kann aus Character richtige Datums-Zeitobjekte erstellen. Sie ist allgemeienr als die oben verwendete ymd_h() Funktion, da man hier das Format explizit angeben kann. unserem Fall ist das Format ‚Äòym‚Äô f√ºr Jahr und Monat.Der Code paste0(year, month) ‚Äúklebt‚Äù die Daten der Variablen year und month zusammen. Das ist n√∂tig, da die Funktion parse_date_time() einen Charaktervektor als Input erwartet und keine zwei getrennten Spalten. Da das Datum au√üer dem Jahr und dem Monat noch einen Tag braucht, hat parse_date_time() den ersten eines jeden Monats genommen.Alternativ k√∂nnen wir die Mittelwerte mit den Standardabweichungen darstellen.Oder, weil es gerade Spa√ü macht, als halb-transparentes Band. Ich hoffe, Sie haben jetzt Lust, das Kapitel 5 im ggplot2 Buch zu lesen üòé.Ein letzter Trick. Die √úberschriften f√ºr die Teilgrafiken sind ungeschickt, da man die IDs als Mensch einfach nicht zuordnen kann. Weiter oben haben wir einen benannten Vektor definiert, der die Klarnamen enth√§lt.Diesen Vektor nutzen wir als Titel.","code":"\ntemp_humid <- temp_humid %>% \n  mutate(year = year(MESS_DATUM),\n         month = month(MESS_DATUM))\n\ntemp_humid## # A tibble: 39,600 x 8\n##    STATIONS_ID MESS_DATUM           QN_9 TT_TU RF_TU eor    year month\n##          <dbl> <dttm>              <dbl> <dbl> <dbl> <chr> <dbl> <dbl>\n##  1        2261 2018-11-19 00:00:00     3  -2.8    99 eor    2018    11\n##  2        2261 2018-11-19 01:00:00     3  -2.5   100 eor    2018    11\n##  3        2261 2018-11-19 02:00:00     3  -2.3   100 eor    2018    11\n##  4        2261 2018-11-19 03:00:00     3  -2     100 eor    2018    11\n##  5        2261 2018-11-19 04:00:00     3  -1.9    99 eor    2018    11\n##  6        2261 2018-11-19 05:00:00     3  -2.1    99 eor    2018    11\n##  7        2261 2018-11-19 06:00:00     3  -1.8    99 eor    2018    11\n##  8        2261 2018-11-19 07:00:00     3  -1.5    99 eor    2018    11\n##  9        2261 2018-11-19 08:00:00     3  -1.1    99 eor    2018    11\n## 10        2261 2018-11-19 09:00:00     3  -0.6    97 eor    2018    11\n## # ‚Ä¶ with 39,590 more rows\nmonthly_means <- temp_humid %>%\n  group_by(STATIONS_ID, year, month) %>% \n  summarize(mean_T = mean(TT_TU), mean_RH = mean(RF_TU),\n            sd_T = sd(TT_TU), sd_RH = sd(RF_TU))## `summarise()` has grouped output by 'STATIONS_ID', 'year'. You can override using the `.groups` argument.\nmonthly_means## # A tibble: 57 x 7\n## # Groups:   STATIONS_ID, year [9]\n##    STATIONS_ID  year month mean_T mean_RH  sd_T sd_RH\n##          <dbl> <dbl> <dbl>  <dbl>   <dbl> <dbl> <dbl>\n##  1        1420  2018    11   4.00    79.7  1.82  9.96\n##  2        1420  2018    12   4.73    83.7  4.20 11.7 \n##  3        1420  2019     1   2.12    79.3  3.76 10.0 \n##  4        1420  2019     2   4.48    74.1  4.69 17.7 \n##  5        1420  2019     3   8.28    68.5  4.08 16.1 \n##  6        1420  2019     4  11.7     61.0  5.52 21.8 \n##  7        1420  2019     5  12.7     67.5  4.64 20.1 \n##  8        1420  2019     6  21.4     60.6  6.05 21.2 \n##  9        1420  2019     7  21.6     55.6  5.90 21.8 \n## 10        1420  2019     8  20.7     65.6  4.94 20.8 \n## # ‚Ä¶ with 47 more rows\nstr(monthly_means)## grouped_df[,7] [57 √ó 7] (S3: grouped_df/tbl_df/tbl/data.frame)\n##  $ STATIONS_ID: num [1:57] 1420 1420 1420 1420 1420 1420 1420 1420 1420 1420 ...\n##  $ year       : num [1:57] 2018 2018 2019 2019 2019 ...\n##  $ month      : num [1:57] 11 12 1 2 3 4 5 6 7 8 ...\n##  $ mean_T     : num [1:57] 4 4.73 2.12 4.48 8.28 ...\n##  $ mean_RH    : num [1:57] 79.7 83.7 79.3 74.1 68.5 ...\n##  $ sd_T       : num [1:57] 1.82 4.2 3.76 4.69 4.08 ...\n##  $ sd_RH      : num [1:57] 9.96 11.68 10.04 17.73 16.1 ...\n##  - attr(*, \"groups\")= tibble[,3] [9 √ó 3] (S3: tbl_df/tbl/data.frame)\n##   ..$ STATIONS_ID: num [1:9] 1420 1420 1420 2261 2261 ...\n##   ..$ year       : num [1:9] 2018 2019 2020 2018 2019 ...\n##   ..$ .rows      : list<int> [1:9] \n##   .. ..$ : int [1:2] 1 2\n##   .. ..$ : int [1:12] 3 4 5 6 7 8 9 10 11 12 ...\n##   .. ..$ : int [1:5] 15 16 17 18 19\n##   .. ..$ : int [1:2] 20 21\n##   .. ..$ : int [1:12] 22 23 24 25 26 27 28 29 30 31 ...\n##   .. ..$ : int [1:5] 34 35 36 37 38\n##   .. ..$ : int [1:2] 39 40\n##   .. ..$ : int [1:12] 41 42 43 44 45 46 47 48 49 50 ...\n##   .. ..$ : int [1:5] 53 54 55 56 57\n##   .. ..@ ptype: int(0) \n##   ..- attr(*, \".drop\")= logi TRUE\nmonthly_means <- ungroup(monthly_means)\nmonthly_means <- monthly_means %>%\n  mutate(year_month = parse_date_time(paste0(year, month), 'ym', tz = 'CET'))\n\nmonthly_means## # A tibble: 57 x 8\n##    STATIONS_ID  year month mean_T mean_RH  sd_T sd_RH year_month         \n##          <dbl> <dbl> <dbl>  <dbl>   <dbl> <dbl> <dbl> <dttm>             \n##  1        1420  2018    11   4.00    79.7  1.82  9.96 2018-11-01 00:00:00\n##  2        1420  2018    12   4.73    83.7  4.20 11.7  2018-12-01 00:00:00\n##  3        1420  2019     1   2.12    79.3  3.76 10.0  2019-01-01 00:00:00\n##  4        1420  2019     2   4.48    74.1  4.69 17.7  2019-02-01 00:00:00\n##  5        1420  2019     3   8.28    68.5  4.08 16.1  2019-03-01 00:00:00\n##  6        1420  2019     4  11.7     61.0  5.52 21.8  2019-04-01 00:00:00\n##  7        1420  2019     5  12.7     67.5  4.64 20.1  2019-05-01 00:00:00\n##  8        1420  2019     6  21.4     60.6  6.05 21.2  2019-06-01 00:00:00\n##  9        1420  2019     7  21.6     55.6  5.90 21.8  2019-07-01 00:00:00\n## 10        1420  2019     8  20.7     65.6  4.94 20.8  2019-08-01 00:00:00\n## # ‚Ä¶ with 47 more rows\nggplot(data = monthly_means, aes(x = year_month, y = mean_T, \n            col = factor(STATIONS_ID))) + \n  geom_line() + \n  labs(x = 'Zeit', y = 'Temperatur (¬∞C)', color = 'Messstation')\nggplot(monthly_means, aes(x = year_month, y = mean_T, ymin = mean_T - sd_T, ymax = mean_T + sd_T)) +\n  geom_errorbar() +\n  geom_point() +\n  facet_wrap(~STATIONS_ID, nrow = 3) + \n  labs(x = 'Zeti', y = 'Temperatur (¬∞C)', color = 'Messstation')\nggplot(monthly_means, aes(x = year_month, y = mean_T, ymin = mean_T - sd_T, ymax = mean_T + sd_T)) +\n  geom_ribbon(alpha = 0.5) +\n  geom_line() +\n  facet_wrap(~STATIONS_ID, nrow = 3) + \n  labs(x = 'Zeit', y = 'Temperatur (¬∞C)', color = 'Messstation')\nstation_ids##        2261        1420        2667 \n##       \"Hof\" \"Frankfurt\"     \"Koeln\"\nggplot(monthly_means, aes(x = year_month, y = mean_T, ymin = mean_T - sd_T, ymax = mean_T + sd_T)) +\n  geom_ribbon(alpha = 0.5) +\n  geom_line() +\n  facet_wrap(~STATIONS_ID, nrow = 3, labeller = labeller(STATIONS_ID = station_ids)) + \n  labs(x = 'Zeit', y = 'Temperatur (¬∞C)', color = 'Messstation')"},{"path":"tidyverse.html","id":"lesestoff-4","chapter":"Kapitel 6 Der explorative Workflow mit tidyverse","heading":"6.5 Lesestoff","text":"Kapitel 3 Ismay Kim (2021)","code":""},{"path":"tidyverse.html","id":"weiterf√ºhrende-literatur-und-videos","chapter":"Kapitel 6 Der explorative Workflow mit tidyverse","heading":"6.6 Weiterf√ºhrende Literatur und Videos","text":"R4DS Wickham Grolemund (2021): Kapitel 5 ‚ÄúData transformation‚ÄùR4DS Wickham Grolemund (2021): Kapitel 5 ‚ÄúData transformation‚ÄùEine live Analyse des Hauptautors von tidyverse, Hadley Wickham. Empfehlenswert, auch wenn er viel zu schnell tippt üòÑ.Eine live Analyse des Hauptautors von tidyverse, Hadley Wickham. Empfehlenswert, auch wenn er viel zu schnell tippt üòÑ.","code":""},{"path":"aufgabensammlung.html","id":"aufgabensammlung","chapter":"Kapitel 7 Aufgabensammlung","heading":"Kapitel 7 Aufgabensammlung","text":"Diese Aufgabensammlung enth√§lt zus√§tzlich Aufgaben, die z.B. im Seminar bearbeitet werden. Aufgaben zu den einzelnen Kapiteln finden Sie Ende des jeweiligen Kapitels.","code":""},{"path":"aufgabensammlung.html","id":"tutorial-zusammenhangsma√üe","chapter":"Kapitel 7 Aufgabensammlung","heading":"7.1 Tutorial Zusammenhangsma√üe","text":"Begleitend zu diesem Tutorial sind die Kapitel 2 und 3 Mittag (2017) ‚ÄúStatistik‚Äù zu lesen.","code":""},{"path":"aufgabensammlung.html","id":"befragung-der-studierenden-der-uni-werdeschlau","chapter":"Kapitel 7 Aufgabensammlung","heading":"Befragung der Studierenden der Uni Werdeschlau","text":"Wir besch√§ftigen uns mit einem fiktiven Beispiel.der (kleinen) Universit√§t Werdeschlau m√∂chte die Studierendenvertretung wissen, ob sich eine Station zum Ausleihen von Fahrr√§dern lohnen w√ºrde. Dazu befragen sie die Studierenden, wie lange sie zur Uni fahren. Zudem wollen Sie wissen, ob die Anreisezeit und die Zeit, die die Studierenden pro Woche der Bibliothek verbringen, zusammen h√§ngen.","code":""},{"path":"aufgabensammlung.html","id":"grundgesamtheit-generieren","chapter":"Kapitel 7 Aufgabensammlung","heading":"7.1.1 Grundgesamtheit generieren","text":"Unsere Grundgesamtheit sind alle 12000 Studierende von der Uni Werdeschlau. Wir erstellen uns diesem Beispiel selbst unsere Grundgesamtheit aus der Gleichverteilung. Die Regeln dazu sind absolut frei erfunden. Die meisten Studierenden sind zwischen 5 und 40 Minuten unterwegs; 20% jedoch haben eine l√§ngere Anreise zwischen 60 und 120 Minuten.Lassen Sie den Code laufen.Wir setzen geschlecht, wohnort, verkehrsmittel, anreise und zeit_bib zu einer Datenmatrix (tibble) zusammen und nennen das Objekt grundgesamtheit.Lassen Sie den folgenden Code laufen.","code":"\nlibrary(tidyverse)\nset.seed(123)\nanreise <- c(runif(n = 12000 * 0.8, min = 5, max = 40),\n                     runif(n = 12000 * 0.2, min = 60, max = 120))\n\ngeschlecht <- sample(c('m', 'w'), size = 12000, replace = TRUE)\nwohnort <- sapply(anreise, function(x) {\n  if(x < 30) 'stadt'\n  else 'land'\n})\nverkehrsmittel <- sapply(anreise, function(x) {\n  if(x <= 10) 'zu_fuss'\n  else if(x > 10 & x <= 15) sample(c('zu_fuss', 'fahrrad'), size = 1)\n  else if(x > 15 & x <= 45) sample(c('bus', 'fahrrad', 'auto'), size = 1)\n  else sample(c('bus', 'auto'), size = 1)\n})\n\nzeit_bib <- 5 * 60 - 0.7 * anreise + rnorm(length(anreise), 0, 20)\ngrundgesamtheit <- tibble(geschlecht, wohnort, verkehrsmittel, anreise, zeit_bib)"},{"path":"aufgabensammlung.html","id":"befragung-simulieren","chapter":"Kapitel 7 Aufgabensammlung","heading":"7.1.2 Befragung simulieren","text":"der Realit√§t werden nat√ºrlich nicht alle 12000 Studierende befragt (wer hat schon viele Kapazit√§ten?), sondern eine zuf√§llige Stichprobe erhoben, also eine Teilmenge der Grundgesamtheit.Frage: Wie nennt man die StudierendenMerkmalstr√§gerBefragte oderModalwerte?Falls Sie nicht sicher sind: Lesen Sie Kapitel 2 Mittag (2017) ‚ÄúStatistik!‚ÄùUm unsere Stichprobe zu erstellen, ziehen wir ohne Zur√ºcklegen aus unserer Grundgesamtheit. Sagen wir mal, die Kapazit√§ten der Befragenden reichen f√ºr 200 Befragungen.Lassen Sie den folgenden Code laufen.","code":"\nbefragung <- grundgesamtheit[sample(1:dim(grundgesamtheit)[1], size = 200, replace = FALSE), ]"},{"path":"aufgabensammlung.html","id":"kurze-explorative-datenanalyse","chapter":"Kapitel 7 Aufgabensammlung","heading":"7.1.3 Kurze explorative Datenanalyse","text":"Von hier arbeiten wir mit unserer Stichprobe befragung. Sehen wir uns mal die empirische Verteilung, d.h. die Verteilung der Stichprobe .Plotten Sie ein Histogramm der Anreisezeiten unserer Stichprobe. Lassen Sie den Code laufen und passen Sie die bins sinnvoll .","code":"\nggplot(data = befragung, aes(x = anreise)) +\n  geom_histogram(bins = 5) +\n  xlab('Tagliche Anreise (min)') +\n  ylab('H√§ufigkeit')"},{"path":"aufgabensammlung.html","id":"lage--und-streuungsma√üe","chapter":"Kapitel 7 Aufgabensammlung","heading":"7.1.4 Lage- und Streuungsma√üe","text":"Erstellen Sie die F√ºnf-Punkte-Zusammenfassung der Stichprobe. Lassen Sie den Code laufen.Wie Sie sehen k√∂nnen, behandelt R die kategorischen Daten anders als numerische. Kategorische Variablen werden als absolute H√§ufigkeiten pro Kategorie dargestellt (d.h. ausgez√§hlt).Wir vergleichen nun gew√∂hnliche und robuste Lage- und Streuungsma√üe. Zu gew√∂hnlichen geh√∂ren der Mittelwert (genauer arithmetisches Mittel) und die Standardabwechung.Berechnen Sie den Mittelwert und die Standardabweichung der Anreise.Zu den robusten Ma√üen geh√∂ren der Median, der Interquartilabstand und die mittlere absolute Abweichung vom Median (MAD). MAD beschreibt die durchschnittlich Abweichung der Stichprobe von ihrem Median.Berechnen Sie den Median der Stichprobe.Den Interquartilabstand bekommt man mit Hilfe der Funtion quantile, die die Quantile berechnet.Lassen Sie den folgenden Code laufen.Der Interquartilabstand kann auch direkt mit der Funktion IQR() berechnet werden und MAD mit mad().Berechnen Sie den Interquartilabstand und MAD der Stichprobe.Vergleichen Sie die gew√∂hnlichen und die robusten Ma√üe. Es gilt: je gr√∂√üer die au√üergew√∂hnlichen Datenpunkte, d.h. je h√∂her die h√∂chsten Anfahrtszeiten, desto st√§rker reagieren der Mittelwert und die Standardabweichung. Die robusten Ma√üe bleiben (solange der Anteil der hohen Anfahrtszeiten nicht zu gro√ü ist) relativ konstant.Abgesehen vom Aspekt der Robustheit, ist das arithmetische Mittel nicht immer ein geeigneter Durchschnittswert. F√ºr Wachstumsfaktoren (Preissteigerung, Zinsen) ist das geometrische Mittel die korrekte Mittelung und f√ºr die Berechnung von Durchschnittsgeschwindigkeiten das harmonische Mittel (Details z.B. bei Fahrmeir et al.¬†(2016). Statistik. Der Weg zur Datenanalyse).","code":"\nsummary(befragung)\nquantile(x = befragung$anreise, probs = 0.75) - quantile(x = befragung$anreise, probs = 0.25)"},{"path":"aufgabensammlung.html","id":"zufall-in-der-befragung","chapter":"Kapitel 7 Aufgabensammlung","heading":"7.1.5 Zufall in der Befragung","text":"Wir haben unsere Befragten rein zuf√§llig ausgew√§hlt. D.h. die Kenngr√∂√üen h√§ngen von dieser zuf√§lligen Auswahl ab. Wie w√ºrden sie sich ver√§ndern, wenn wir eine andere Stichprobe ausgesucht h√§tten?Wir simulieren eine wiederholte Befragung und sehen uns , wie sich der Mittelwert und der Median entwickeln. Lassen Sie den Code laufen.Stellen Sie die Mittelwerte mean_all als Histogramm dar. Lassen Sie den Code laufen und passen Sie die bins sinnvoll .Stellen Sie die Mediane median_all als Histogramm dar. Lassen Sie den Code laufen und passen Sie die bins sinnvoll .","code":"\nanzahl_der_befragungen <- 100\n\n# Leere Vektoren erstellen, in die sp√§ter die Ergebnisse geschrieben werden.\nmean_all <- vector()\nmedian_all <- vector()\n\n\nfor (i in 1:anzahl_der_befragungen){\n  dat <- grundgesamtheit[sample(1:dim(grundgesamtheit)[1], size = 200, replace = FALSE), ]\n  mean_all[i] <- mean(dat$anreise)\n  median_all[i] <- median(dat$anreise)\n}\n\nkennzahlen <- tibble(mean_all, median_all)\nggplot(data = kennzahlen, aes(x = mean_all)) +\n  geom_histogram(bins = 5) +\n  xlab('Mittelwerte der taglichen Anreise (min)') +\n  ylab('H√§ufigkeit')\nggplot(data = kennzahlen, aes(x = median_all)) +\n  geom_histogram(bins = 5) +\n  xlab('Mediane der taglichen Anreise (min)') +\n  ylab('H√§ufigkeit')"},{"path":"aufgabensammlung.html","id":"zusammenhangsma√üe-f√ºr-nominalskalierte-merkmale","chapter":"Kapitel 7 Aufgabensammlung","heading":"7.1.6 Zusammenhangsma√üe f√ºr nominalskalierte Merkmale","text":"Gibt es Pr√§ferenzen f√ºr bestimmte Verkehrsmittel je nach Geschlecht?\nWir sehen uns die Kontingenztabelle dazu .Lassen Sie den folgenden Code laufen.Nun berechnen wir die Zusammenhangsma√üe auf dieser Tabelle. Dazu nutzen wir die Bibliothek vcd (Visualizing Categorical Data), sehr empfehlenswert, wenn Sie kategorische Daten analysieren wollen.Lassen Sie den folgenden Code laufen.Der Phi-Koeffizient ist NA, weil er nur auf \\(2 \\times 2\\)-Tabellen definiert ist. Die beiden anderen, Contingency Coeff. (Pearson Koeffizient K) und Cramer‚Äôs V zeigen unterschiedliche Werte , je nachdem, wie unsere zuf√§llige Stichprobe ausf√§llt. Aber der Zusammenhang sollte eher klein sein.Allgemein gil: Contingency Coeff. (Pearson Koeffizient K) und Cramer‚Äôs V schwanken zwischen 0 (kein Zusammenhang) und 1 (perfekter Zusammenhang). Wichtig: Sie zeigen keine Richtung . D.h. wir wissen nicht, ob der Zusammenhang positiv - ‚Äúje mehr desto mehr‚Äù oder negativ ‚Äúje mehr desto weniger‚Äù ist.Die ersten beiden Zeilen, die assocstats liefert, geh√∂ren zum Thema Hypothsentests. Das besprechen wir sp√§ter.Gibt es einen Zusammenhang zwischen dem Wohnort und dem ausgesuchten Verkehrsmittel?Berechnen Sie die Kontingenztabelle. Nutzen Sie die Funktion table() auf den Spalten wohnort und verkehrsmittel im Datensatz befragung.Berechnen Sie die Zusammenhangsma√üe. Lassen Sie den Code laufen.Gibt es eine Pr√§ferenz f√ºr den Wohnort je Geschlecht? Lassen Sie den Code laufen.Da Sie ja genau wissen, wie die Daten erstellt wurden, sollten Ihnen die Antworten nicht zu schwer fallen.","code":"\ntable(befragung$geschlecht, befragung$verkehrsmittel)\nlibrary(vcd)\nassocstats(table(befragung$geschlecht, befragung$verkehrsmittel))\nassocstats(table(befragung$wohnort, befragung$verkehrsmittel))\nassocstats(table(befragung$wohnort, befragung$geschlecht))"},{"path":"aufgabensammlung.html","id":"zusammenhangsma√üe-f√ºr-metrische-merkmale","chapter":"Kapitel 7 Aufgabensammlung","heading":"7.1.7 Zusammenhangsma√üe f√ºr metrische Merkmale","text":"Zum Schluss wenden wir uns den beiden numerischen Variablen, anreise und zeit_bib. Besteht hier eine Korrelation?Zuerst stellen wir die Daten dar.Lassen Sie den folgenden Code laufen.Der Zusammenhang zwischen den beiden Variablen ist (ziemlich) linear und negativ.Wir berechnen beide Korrelationsma√üe, den Pearson Korrelationskoeffizienten f√ºr lineare Zusammenh√§nge und den Spearman Korrelationskoeffizient f√ºr monotone Zusammenh√§nge.Lassen Sie den Code laufen.Beide Koeffizienten sind nah dran dem Faktor 0.7, den wir zum Simulieren unserer Daten verwendet haben. Man darf hier beide verwenden. Wichtig ist es zu berichten, welchen Sie verwenden. D.h. es ist nicht genug, zu schreiben, dass Sie eine Korrelation berechnet haben.Gut gemacht! Lassen Sie den Code laufen.","code":"\nggplot(data = befragung, aes(x = anreise, y = zeit_bib)) +\n  geom_point() +\n  xlab('T√§gliche Anreise (min)') +\n  ylab('Zeit in der Bibliothek pro Woche (min)')\n# Pearson Korrelationskoeffizient\ncor(befragung$anreise, befragung$zeit_bib, method = 'pearson')\n\n# Spearman Korrelationskoeffizient\ncor(befragung$anreise, befragung$zeit_bib, method = 'spearman')\nlibrary(ggplot2)\nlibrary(emojifont)\nggplot() + geom_fontawesome(\"fa-coffee\", color='lightblue', size = 80) + theme_void() + ggtitle(\"It's time for coffee\")"},{"path":"aufgabensammlung.html","id":"aufgabe-einreichen","chapter":"Kapitel 7 Aufgabensammlung","heading":"7.1.8 Aufgabe einreichen","text":"Speichern Sie Ihr Notebook und laden Sie es vom Server herunter.Laden Sie Ihr Notebook ILIAS hoch. Sie bekommen eine Musterl√∂sungVergleichen Sie Ihre L√∂sung mit der Musterl√∂sung.Fertig!","code":""},{"path":"literatur.html","id":"literatur","chapter":"Literatur","heading":"Literatur","text":"","code":""}]
