[
["index.html", "Datenanalyse mit R SoSe 2020 Kapitel 1 Vorwort 1.1 Organisatorisches 1.2 Sinn und Unsinn dieses Skripts", " Datenanalyse mit R SoSe 2020 Christina Bogner Version vom: 20. April 2020 Kapitel 1 Vorwort ‚ÄúAnd honey, we‚Äôre gonna do it in style‚Äù ‚Äî Fools Garden 1.1 Organisatorisches Die Coronaviruspandemie ver√§ndert unser Leben und unser Lernen. Die UzK bittet Lehrende, zumindest zu Beginn des SoSe 2020 auf digitale Lernformen umzusteigen. Daher wird dieser Kurs als ein Onlinekurs beginnen. Abh√§ngig von der (sehr dynamischen) Lage werden wir im weiteren Kursverlauf das Format anpassen. Bitte seien Sie nachsichtig, wenn nicht alles so klappt, wie in Pr√§senzveranstaltungen. Wir m√ºssen aktuell alle sehr viel dazu lernen in Sachen digitale Lehre. Sie k√∂nnen sicher sein, dass das Geographische Institut bem√ºht ist, die Lehre so effizient wie m√∂glich weiter laufen zu lassen, damit Sie in Ihrem Studium fortfahren k√∂nnen. In dieser Veranstaltung werden wir folgende Werkzeuge verwenden: ILIAS: die Online-Lernplattform der UzK. Entweder sind Sie bereits automatisch in dem Kurs registriert oder werden von mir per Hand angemeldet. Campuswire: die Live-Chatplattform dient der allgemeinen Kommunikation und der Selbstorganisation des Lernens. Verwenden Sie diese, um Fragen mit Ihren Kommilitonen und mir zu diskutieren. Sie sollten eine Einladungsmail zu Campuswire erhalten haben. Zoom: die Videokonferenz-Software werden wir f√ºr live Einf√ºhrungen nutzen. Die Anmeldemodalit√§ten sind auf den Kursseiten in ILIAS erkl√§rt. 1.2 Sinn und Unsinn dieses Skripts Dieses Skript ist ein lebendiges Begleitdokument des Kurses. Es wird laufend angepasst und aktualisiert. Ich nutze verschiedene Farbk√§sten, um wichtige Stellen hervorzuheben: Infoblock Achtung, wichtig! Beispielblock Lernziele Zusammenfassung "],
["einfuehrung.html", "Kapitel 2 Der Kurs 2.1 Zuordnung zum Modul und Leistungsnachweis 2.2 Lernziele des Kurses 2.3 Was mir im Umgang miteinander wichtig ist", " Kapitel 2 Der Kurs 2.1 Zuordnung zum Modul und Leistungsnachweis Dieser Kurs geh√∂rt zum Modul Fachmethodik I oder Fachmethodik II und ist aus 4 SWS Praktikum und 2 SWS Seminar aufgebaut. Das wichtigste Ziel besteht darin, Ihnen einen sicheren Umgang mit R beizubringen. Den Leistungsnachweis bildet ein benoteter Praktikumsbericht. 2.2 Lernziele des Kurses Daten f√ºr Analysen vorbereiten eigene wiederverwendbare Skripte schreiben eigene Funktionen schreiben einfache Datenanalysen durchf√ºhren Daten visualisieren Ergebnisse reproduzierbar im Praktikumsbericht darstellen 2.3 Was mir im Umgang miteinander wichtig ist P√ºnktlichkeit bei live und Pr√§senzsitzungen Gute Vorbereitung durch erledigen der blenden learning Einheiten und Hausaufgaben Respektieren anderer Meinungen Offenheit gegen√ºber neuen Sichtweisen, Themen und Methoden Geduld mit sich selbst und den anderen üòÑ "],
["erste-schritte.html", "Kapitel 3 Erste Schritte in 3.1 Was ist R? 3.2 Was ist RStudio? 3.3 RStudio Cloud 3.4 Inhalt der live Einf√ºhrung und der √úbungen", " Kapitel 3 Erste Schritte in Layout und Bedeutung einzelner Fenster in RStudio kennen Anweisungen aus dem Skript an die Konsole schicken R als Taschenrechner benutzen erste Funktionen aufrufen Objekte mit eckigen Klammern [ ] ansprechen 3.1 Was ist R? R ist eine Programmiersprache f√ºr Datenanalyse und statistische Modellierung. Es ist frei verf√ºgbar (open source software) und neben Python einer der am meisten benutzten Programmiersprachen zur Datenanalyse und -visualisierung. R wurde von Ross Ihaka und Robert Gentleman 1996 ver√∂ffentlicht Ihaka and Gentleman (1996). Es gibt f√ºr R eine Vielzahl von Zusatzpaketen, die die Funktionalit√§t und die Einsatzm√∂glichkeiten enorm erweitern. Sie k√∂nnen R f√ºr Ihren Computer auf der offiziellen R-Seite https://www.r-project.org/ herunter laden und installieren. Auch die Pakete finden Sie dort unter CRAN (The Comprehensive R Archive Network). Auf den CRAN-Seiten finden Sie sogen. CRAN Task Views, eine √úbersicht √ºber Pakete in verschiedenen Themenbereichen. F√ºr den Umweltbereich sind folgende Paketsammlungen besonders relevant: Environmetrics: Analyse von Umweltdaten Multivariate: Multivariate Statistik Spatial: Analyse von r√§umlichen Daten TimeSeries: Zeitreihenanalyse Zu Beginn des Kurses, werden wir jedoch nicht auf Ihren lokalen Rechnern arbeiten, sondern in einer Cloud (s.u.). Das erm√∂glicht einen schnelleren Einstieg in R und bietet eine live Unterst√ºtzung durch den Dozenten beim Programmieren. Daher biete ich zu diesem fr√ºhen Zeitpunkt im Kurs keine Unterst√ºtzung bei der Installation. F√ºr die ganz Ungeduldigen, gibt es hier eine kurze Einleitung zur Installation 3.2 Was ist RStudio? RStudio Desktop ist eine Entwicklungsumgebung f√ºr R. Sie k√∂nnen die open source Version kostenlos f√ºr Ihren Rechner hier herunterladen. Es gibt eine live Einf√ºhrung in RStudio im Kurs. Zus√§tzlich k√∂nnen Sie hier ein Video dazu ansehen. 3.3 RStudio Cloud Zu Beginn des Kurses werden wir in der RStudio Cloud arbeiten. Sie sollten eine Einladungsmail zu unserem Kurs in der Cloud bekommen haben. Ich werde in der Cloud Projekte f√ºr Sie anlegen (assignment), die Skripte, Arbeitsanweisungen etc. beinhalten. Wenn Sie auf so ein Assignment klicken, wird f√ºr Sie automatische ein Kopie des Projekts erstellt, in der Sie dann arbeiten k√∂nnen. Der gro√üe Vorteil der Cloud ist, dass ich direkt in Ihre Projekte eingreifen kann, wenn es mal zu Fehlern kommt. W√§hrend ich in Ihrem Projekt arbeite, werden Sie kurz aus der R-Sitzung ausgeloggt, da die Cloud kein gleichzeitiges Arbeiten unterst√ºtzt. Nehmen Sie sich etwas Zeit, um die Cloud und die darin enthaltenen Tutorials kennen zu lernen. Sowohl in der RStudio Cloud als auch in einer lokalen Installation, ist Ihr RStudio so aufgebaut wie in Abbildung 3.1. Abbildung 3.1: Aufbau von RStudio 3.4 Inhalt der live Einf√ºhrung und der √úbungen √úberblick √ºber RStudio R als Taschenrechner einfache Funktionen aufrufen Zuordnungen (assignments) Notation mit eckigen Klammern [ ] (array-Notation) Hilfeseiten aufrufen Funktionen, die wir in der Session nutzen werden: Funktion Bedeutung Beispielaufruf pi Zahl pi pi sin Sinus sin(2) cos Cosinus cos(2) sqrt Quadratwurzel sqrt(2) c (concatenate) F√ºgt Daten zu einem Vektor zusammen c(1,2,3,4) help.start √ñffnet ein Browser-Fenster mit diversen Handb√ºchern help.start() help.search Sucht nach einem Begriff in Hilfe-Dateien help.search('time') ?? alias help.search ??time help Sucht nach einer Funktion ?mean ? alias help() ?mean mean Mittelwert mean(c(1,2,3,4)) var Varianz var(c(1,2,3,4)) sd Standardabweichung sd(c(1,2,3,4)) sum Summe sum(c(1,2,3,4)) vector Generiert einen Vektor vector(length=3, mode='numeric') "],
["daten.html", "Kapitel 4 Daten in R 4.1 Datenstrukturen erzeugen 4.2 Arten von Daten in R 4.3 Objekt, sag mir wer du bist 4.4 Datenl√ºcken, Fehlschl√§ge etc. 4.5 Inhalt der live Einf√ºhrung und der √úbungen", " Kapitel 4 Daten in R Daten einlesen mit read.table Datenstrukturen erstellen Typen von Daten in R abfragen Daten speichern mit write.table 4.1 Datenstrukturen erzeugen In R gibt es unterschiedliche Datenobjekte. Es ist wichtig, sich √ºber die Struktur (oder Typ) des Datenobjekts Gedanken zu machen. Denn diese bestimmt, was mit einem Objekt gemacht werden kann und ob Funktionen damit richtig umgehen k√∂nnen. Schlie√ülich ist es nicht egal, ob es sich bei einem Objekt um ein numerisches Objekt oder einfach Text (character) handelt. Die wichtigsten Datentypen sind Vektoren: hier gruppiert man gleichartige Elemente, z.B. Zahlen. Auch eine einzelne Zahl (ein Skalar) wird von R wie ein Vektor behandelt. Matrizen: zweidimensionale (Zeilen und Spalten) Datentabellen mit gleichartigen Elementen. Listen: k√∂nnen beliebige Elemente beliebiger L√§nge enthalten. Dataframes: zweidimensionale Datentabellen, die beliebige Elemente enthalten k√∂nnen. Die Spalten der Dataframes m√ºssen allerdings gleichartige Elemente enthalten. Dataframes sind eine Unterart von Listen. Neben diesen Hauptstrukturen gibt es Factor: ein besonderer Vektor f√ºr kategorielle Variablen Um diese Datenstrukturen zu erzeugen, gibt es jeweils eine Funktion mit gleichlautendem Namen. # Vektor erzeugen my_vect = vector(length = 3, mode = &#39;numeric&#39;) my_vect ## [1] 0 0 0 # Matrix erzeugen my_matrix = matrix(data = c(1:(3*4)), nrow = 3, ncol = 4) my_matrix ## [,1] [,2] [,3] [,4] ## [1,] 1 4 7 10 ## [2,] 2 5 8 11 ## [3,] 3 6 9 12 # Dataframe erzeugen my_dataframe = data.frame(&#39;Spalte_1&#39; = rep(&#39;Text&#39;, 10), &#39;Spalte_2&#39; = 1:10) my_dataframe ## Spalte_1 Spalte_2 ## 1 Text 1 ## 2 Text 2 ## 3 Text 3 ## 4 Text 4 ## 5 Text 5 ## 6 Text 6 ## 7 Text 7 ## 8 Text 8 ## 9 Text 9 ## 10 Text 10 # Liste erzeugen my_list = list(&#39;Schachtel_1&#39; = 3, &#39;Schachtel_2&#39; = my_dataframe, &#39;Schachtel_3&#39; = &#39;Noch mehr Text&#39;) my_list ## $Schachtel_1 ## [1] 3 ## ## $Schachtel_2 ## Spalte_1 Spalte_2 ## 1 Text 1 ## 2 Text 2 ## 3 Text 3 ## 4 Text 4 ## 5 Text 5 ## 6 Text 6 ## 7 Text 7 ## 8 Text 8 ## 9 Text 9 ## 10 Text 10 ## ## $Schachtel_3 ## [1] &quot;Noch mehr Text&quot; # Factor erzeugen my_factor = factor(c(&#39;R&#39;, &#39;RStudio&#39;, &#39;Cloud&#39;, &#39;Cloud&#39;, &#39;R&#39;, &#39;R&#39;)) my_factor ## [1] R RStudio Cloud Cloud R R ## Levels: Cloud R RStudio 4.2 Arten von Daten in R Die Datenstrukturen vector, data.frame usw. k√∂nnen unterschiedliche Arten von Daten enthalten. Name Beispiele raw 3A, FE logical TRUE, FALSE integer 1, 42, -3 numeric/double 3, 2.81, 6.032e23 complex 1.2+2.2i character ‚Äúfoo‚Äù 4.3 Objekt, sag mir wer du bist Um die Struktur und/oder Datenart abzufragen, verwendet man class, typeof, mode und storage.mode. class(my_vect) ## [1] &quot;numeric&quot; typeof(my_vect) ## [1] &quot;double&quot; class(my_dataframe) ## [1] &quot;data.frame&quot; typeof(my_dataframe) ## [1] &quot;list&quot; Mit str kann man das Innenleben eines Objekts anzeigen. Das ist besonders wichtig nach dem Einlesen von Daten, um das Ergebnis des Einlesens zu kontrollieren. Dabei kontrolliert man, dass z.B. alle numerischen Spalten auch als Zahlen eingelesen wurden und nichts schief gegangen ist. str(my_dataframe) ## &#39;data.frame&#39;: 10 obs. of 2 variables: ## $ Spalte_1: Factor w/ 1 level &quot;Text&quot;: 1 1 1 1 1 1 1 1 1 1 ## $ Spalte_2: int 1 2 3 4 5 6 7 8 9 10 Weiter Funktionen, die Auskunft √ºber Objekte geben sind length, sinnvoll auf nur Vektoren und Listen, und dim, sinnvoll auf zweidimensionalen Datenobjekten. Wenn Sie versuchen, dim auf einem Vektor aufzurufen, gibt es NULL (s.u.), weil Vektoren keine Dimensionen haben. Wenn Sie length auf einem data.frame aufrufen, bekommen Sie die Anzahl der Dimensionen, n√§mlich 2. Das sind keine besonders spannenden Informationen üòÑ. length(my_vect) ## [1] 3 dim(my_vect) ## NULL length(my_dataframe) ## [1] 2 dim(my_dataframe) ## [1] 10 2 4.4 Datenl√ºcken, Fehlschl√§ge etc. Datenl√ºcken werden in R mit NA kodiert, Fehlschl√§ge bei Berechnungen mit NaN (not a number) und Vektoren der L√§nge 0 mit NULL. Letzteres wird h√§ufig beim Aufruf von Funktionen benutzt, wenn man bestimmte Parameter ausschalten m√∂chte. Die Benutzung muss aber immer in der Hilfe zur jeweiligen Funktion nachgeschlagen werden. 4.5 Inhalt der live Einf√ºhrung und der √úbungen Daten einlesen und data.frame erstellen: Aufgabe 5.2.1 Funktionen, die wir in der Session nutzen werden: Funktion Bedeutung Beispielaufruf read.table Liest Daten aus einer Datei ein. read.table(file= 'Daten.txt', header=TRUE) ls Zeigt den Inhalt des Workspaces. ls head Zeigt den ersten Teil eines Objekts. head(x) tail Zeigt den letzten Teil eines Objekts. tail(x) str Zeigt die Struktur (Innenleben) eines Objekts an str(my_dataframe) length Gibt die L√§nge eines Objekts. length(x) dim Gibt die Dimension eines Objekts (Reihenfolge: Zeilen, Spalten) dim(x) seq Erstellt eine regelm√§√üige Reihe. seq(from=-2, to=4, by=0.1) data.frame Erstellt eine Datentabelle. data.frame(x,y,z) colnames, rownames Benennt Spalten bzw. Zeilen eines Datenobjekts. colnames(x) rm L√∂scht Objekte aus dem Workspace. rm(x) summary Fasst ein Objekt zusammen. summary(x) table Erstellt eine H√§ufigkeitstabelle. table(x) which Gibt die TRUE-Indices eines logischen Objekts. which(LETTERS == 'R') history Zeigt die Liste mit ausgef√ºhrten Befehlen der Session. history write.table Speichert Datenobjekte als Tabelle ab. write.table(x, file='Tabelle.txt') save.image Speichert den Workspace. save.image(file= 'RSession.Rdata') savehistory Speichert die History. savehistory(file= 'Myhistory.Rhistory') "],
["aufgabensammlung.html", "Kapitel 5 Aufgabensammlung 5.1 Erste Schritte 5.2 Laden und Speichern von Daten 5.3 Automatisieren: Skripte &amp; Funktionen 5.4 Daten visualisieren 5.5 Effizientes Programmieren", " Kapitel 5 Aufgabensammlung 5.1 Erste Schritte 5.1.1 Ars Haushaltsbuch Der angehende Datenanalyst Ar Stat m√∂chte dem Rat seiner Mutter folgen und ein Haushaltsbuch anlegen. Als erstes m√∂chte er sich einen √úberblick √ºber seine Ausgaben in der Uni-Mensa verschaffen und erstellt die folgende Tabelle: Tabelle 5.1: Ars Mensaausgaben Wochentag Ausgaben Montag 2,57 Dienstag 2,90 Mittwoch 2,73 Donnerstag 3,23 Freitag 3,90 Wie viel hat Ar insgesamt in der Woche ausgegeben? Wie viel hat er im Schnitt pro Tag ausgegeben? Wie stark schwanken seine Ausgaben? Leider hat Ar sich beim √ºbertragen der Daten vertippt. Er hat am Dienstag seine Freundin zum Essen eingeladen und 7,95 ‚Ç¨ statt 2,90 ‚Ç¨ ausgegeben. Korrigieren Sie Ars Fehler. Wie ver√§ndern sich die Ergebnisse aus den Teilaufgaben 1 bis 3 Warum? 5.2 Laden und Speichern von Daten 5.2.1 Bestandesaufnahme Ar Stat arbeitet als HiWi in der AG √ñkosystemforschung und soll im Nationalpark Eifel eine Bestandsaufnahme durchf√ºhren. Er notiert den BHD (Brusth√∂hendurchmesser) und die Art der B√§ume. Lesen Sie den Datensatz BHD.txt ein und ordnen Sie ihn der Variable BHD zu. Erstellen Sie einen Vektor a mit Baumnummern. Von welcher Art sind die Elemente des Vektors a? F√ºgen Sie die Datens√§tze BHD und a zu einem data.frame zusammen und benennen Sie die Spalten sinnvoll. L√∂schen Sie den Vektor a. Lesen Sie den Datensatz Art.txt ein und ordnen Sie ihn der Variablen art zu. F√ºgen Sie die Art in den data.frame ein. Erstellen Sie eine Tabelle mit der Anzahl der jeweiligen Arten. Nutzen Sie die Funktion `table‚Äô. Speichern Sie die Tabelle mit write.table. Welche Baumart hat im Mittel einen gr√∂√üeren Brusth√∂hendurchmesser? 5.3 Automatisieren: Skripte &amp; Funktionen 5.3.1 R-Hausaufgaben An dem Kurs ‚ÄúEinf√ºhrung in R‚Äù nehmen 49 Studierende teil. Der Leistungsnachweis besteht aus Hausaufgaben, die insgesamt mit 100 Punkten bewertet werden. Ab 50 Punkten gilt der Kurs als bestanden. Lesen Sie den Datensatz R-HAs.txt, der die Endpunkte enth√§lt, ein. Ermitteln Sie, wie viele Teilnehmer bestanden und wie viele nicht bestanden haben. 5.3.2 Flederm√§use, die Zweite Wir besch√§ftigen uns erneut mit den Flederm√§usen. Lesen Sie den korrigierten(!) Datensatz Fledermaus_cor.txt ein. Schreiben Sie eine Funktion, die den Entwicklungsstand der Tiere klassifiziert. Nutzen Sie dazu die ad hoc Regel: Individuum &lt; 5 cm ist ein Jungtier, sonst erwachsen. Erstellen Sie eine ordinal-skalierte Variable alter mit dem Entwicklungsstand der Tiere. Schreiben Sie eine Funktion, die die Mittelwerte der Gr√∂√üe f√ºr weibliche und m√§nnliche Individuen berechnet. Berechnen Sie die Mittelwerte der Gr√∂√üe und runden Sie auf 2 Nachkommastellen. 5.3.3 Unfaire Klausur? Ar belegt im 4. Semester die Veranstaltung ‚ÄúSpa√ü mit R‚Äù. Bei der Klausur gibt es 2 Aufgabengruppen mit jeweils 60 Punkten. Aufgabengruppe 1 wird an Studierende auf ungeraden Sitzpl√§tzen und Aufgabengruppe 2 an Studierende auf geraden Sitzpl√§tzen ausgegeben. Lesen Sie den Datensatz Klausurpunkte.txt ein. √úberpr√ºfen Sie Ars Vermutung, dass die Aufgabengruppe 1 im Schnitt leichter war als Aufgabengruppe 2 (d.h. in der Gruppe 1 im Schnitt mehr Punkte erzielt wurden). 5.4 Daten visualisieren 5.4.1 Lange Bramke (Harz) Im Harz wurden √ºber eine l√§ngere Zeit Niederschlag, Abfluss und Temperatur gemessen. Laden Sie den Datensatz Data.dat. Stellen Sie die Temperatur in einem Scatterplot dar. Welche Darstellungsart (Argument type in plot) erscheint Ihnen am sinnvollsten? Beschriften Sie die Graphik und f√ºgen Sie einen Titel hinzu. Speichern Sie die Graphik als pdf ab. Stellen Sie die Niederschl√§ge in einem Diagramm dar. W√§hlen Sie einen geeigneten Darstellungstyp mit type (Tipp: geben Sie f√ºr die Hilfe ?plot in die Console ein). 5.4.2 Temperatur-Datensatz Laden Sie den Temperatur-Datensatz aus Zuur, Ieno, and Meesters (2009). Berechnen Sie die Monatsmittelwerte f√ºr alle Stationen, sowie die Standardabweichungen. Stellen Sie die Monatsmittel der Temperatur in einem Barplot dar. Beschriften Sie die Graphik sinnvoll. F√ºgen Sie die Standardabweichungen zu den einzelnen Balken hinzu. 5.4.3 Artenvielfalt in Grasl√§ndern Sie erhalten Daten aus dem Grasland-Monitoring im Yellowstone Nationalpark und dem National Bison Range (USA). Das Ziel des Monitorings ist die Untersuchung m√∂glicher √Ñnderungen der Biodiversit√§t und des Zusammenhang mit Umweltfaktoren. Biodiversit√§t wurde durch die Anzahl unterschiedlicher Arten quantifiziert. Insgesamt haben die Forscher ca. 90 Arten in 8 Transekten kartiert. Die Aufnahmen wurden alle 4 bis 10 Jahre wiederholt. Insgesamt liegen 58 Beobachtungen vor. Die Daten sind in der Datei Vegetation2.xls gespeichert. Laden Sie den Datensatz in R und sehen Sie sich das Ergebnis genau mit str, head und tail an. Diese Aufgabe dient dazu, das Einlesen von Excel-Dateien zu erarbeiten. Tipp: eine m√∂gliche Bibliothek, die dabei helfen kann, w√§re xlsx. Berechnen Sie den Mittelwert und die Standardabweichung der Artenzahl (Variable R) pro Transekt. Plotten Sie die Artenzahl gegen die Variable BARESOIL (Anteil von unbewachsenem Boden). Benutzen Sie unterschiedliche Symbole pro Transekt, erstellen Sie eine Legende. Beschriften Sie die Graphik sinnvoll und speichern Sie sie als pdf ab, ohne die Maus zu benutzen. 5.4.4 Tracerversuche Im Waldstein wurden Tracerversuche mit dem Farbstoff Brilliant Blue durchgef√ºhrt und die gef√§rbten Bodenprofile bin√§risiert (d.h. in ein schwarz-wei√ü Bild umgewandelt). Schwarze Pixels stellen gef√§rbten Boden und wei√üe ungef√§rbten dar. Aus diesen Bin√§rbildern wurde anschlie√üend eine Reihe von Kenngr√∂√üen berechnet. Lesen Sie die Datei Waldstein2005_ind.txt ein. Die Tiefe eines Profils ist 579 Pixel und es liegen 6 Profile untereinander in der Spalte d. Berechnen Sie die 5%, 50% und 95% Quantile des F√§rbeanteils (Index d) der 6 Profile. Stellen Sie den Median des Anteils der F√§rbung mit der Tiefe dar und f√ºgen Sie die Quantile als transparente Fl√§che hinzu (Tipp: polygon). 5.5 Effizientes Programmieren 5.5.1 Lagerungsdichten Auf 10 verschiedenen landwirtschaftlichen Feldern wurden im Oberboden je 25 Stechzylinder entnommen. Lesen Sie den Datensatz r file.name(‚ÄúBodendaten.txt‚Äù)` ein. Bestimmen Sie die mittlere Lagerungsdichte pro Feld. 5.5.2 Temperatur-Datensatz, revisited Laden Sie den Temperatur-Datensatz aus Zuur, Ieno, and Meesters (2009), Datei Temperatur.csv. Berechnen Sie die Jahresmittelwerte je Station. (Tipp: Hilfe von tapply genau lesen!) "],
["literatur.html", "Literatur", " Literatur Ihaka, Ross, and Robert Gentleman. 1996. ‚ÄúR: A Language for Data Analysis and Graphics.‚Äù Journal of Computational and Graphical Statistics 5 (3). Taylor &amp; Francis: 299‚Äì314. https://doi.org/10.1080/10618600.1996.10474713. Zuur, A. F., E. Ieno, and E. Meesters. 2009. A Beginner‚Äôs Guide to R. Springer. "]
]
